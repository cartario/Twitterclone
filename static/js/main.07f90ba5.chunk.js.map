{"version":3,"sources":["signin-modal.jsx","signup-modal.jsx","signin.jsx","tweet.jsx","home.jsx","App.js","serviceWorker.js","theme.js","index.js"],"names":["classes","title","React","useState","open","setOpen","handleClose","Button","className","button","fullWidth","color","variant","onClick","Dialog","onClose","aria-labelledby","Box","textAlign","DialogTitle","id","DialogContent","FormControl","FormGroup","TextField","autoFocus","label","type","DialogActions","signUpButton","useStyles","makeStyles","theme","wrapper","display","height","border","blueSide","position","flex","justifyContent","alignItems","backgroundColor","overflow","blueSideList","margin","padding","listStyle","blueSideListIcon","marginRight","blueSideBigIcon","top","left","width","transform","loginSide","loginSideWrapper","maxWidth","boxSizing","borderRadius","marginBottom","spacing","props","Typography","style","Tweet","text","user","tweetsItem","Grid","container","item","xs","Avatar","tweetAvatar","alt","name","src","avatarUrl","tweetsUser","tweetsUserName","email","tweetControls","IconButton","tweetIconButton","tweetIcon","fontSize","paper","sideMenuList","sideMenuItem","palette","primary","main","fill","sideMenuItemLabel","marginLeft","sideMenuIcon","logo","tweetsWrapper","borderTop","borderBottom","tweetsHeader","borderRight","borderLeft","tweetsList","cursor","grey","users","_id","BootstrapInput","withStyles","input","InputBase","Home","Container","Paper","paddingTop","map","key","placeholder","App","path","component","SignIn","Boolean","window","location","hostname","match","createMuiTheme","secondary","ReactDOM","render","Fragment","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"2bAae,cAAuB,IAArBA,EAAoB,EAApBA,QAASC,EAAW,EAAXA,MAAW,EACXC,IAAMC,UAAS,GADJ,mBAC5BC,EAD4B,KACtBC,EADsB,KAO7BC,EAAc,WAClBD,GAAQ,IAEV,OAAS,oCACL,kBAACE,EAAA,EAAD,CAAQC,UAAWR,EAAQS,OAAQC,WAAS,EAAEC,MAAM,UAAUC,QAAQ,WAAWC,QAR7D,WACtBR,GAAQ,KAOsGJ,GAC5G,kBAACa,EAAA,EAAD,CAASV,KAAMA,EAAMW,QAAST,EAAaU,kBAAgB,qBACzD,kBAACC,EAAA,EAAD,CAAKC,UAAU,SACb,kBAAC,IAAD,CAAWP,MAAM,UAAUE,QAASP,KAEtC,kBAACa,EAAA,EAAD,CAAaC,GAAG,qBAAqBnB,GACrC,kBAACoB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,WAAS,EACTL,GAAG,QACHM,MAAM,iCACNC,KAAK,QACLjB,WAAS,IAEX,kBAACc,EAAA,EAAD,CACEC,WAAS,EACTL,GAAG,WACHM,MAAM,uCACNC,KAAK,WACLjB,WAAS,OAKjB,kBAACkB,EAAA,EAAD,KACE,kBAACrB,EAAA,EAAD,CAAQM,QAASP,EAAaK,MAAM,WAApC,kCAGA,kBAACJ,EAAA,EAAD,CAAQM,QAASP,EAAaK,MAAM,WAApC,sCCzCK,cAAuB,IAArBX,EAAoB,EAApBA,QAASC,EAAW,EAAXA,MAAW,EACXC,IAAMC,UAAS,GADJ,mBAC5BC,EAD4B,KACtBC,EADsB,KAO7BC,EAAc,WAClBD,GAAQ,IAEV,OAAS,oCACL,kBAACE,EAAA,EAAD,CAAQC,UAAWR,EAAQS,OAAQC,WAAS,EAAEC,MAAM,UAAUC,QAAQ,YAAYC,QAR9D,WACtBR,GAAQ,KAOuGJ,GAC7G,kBAACa,EAAA,EAAD,CAASV,KAAMA,EAAMW,QAAST,EAAaU,kBAAgB,qBACzD,kBAACC,EAAA,EAAD,CAAKC,UAAU,SACb,kBAAC,IAAD,CAAWP,MAAM,UAAUE,QAASP,KAEtC,kBAACa,EAAA,EAAD,CAAaC,GAAG,qBAAhB,oIACA,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,WAAS,EACTL,GAAG,OACHM,MAAM,qBACNC,KAAK,OACLjB,WAAS,IAEX,kBAACc,EAAA,EAAD,CACEC,WAAS,EACTL,GAAG,QACHM,MAAM,iCACNC,KAAK,QACLjB,WAAS,IAEX,kBAACc,EAAA,EAAD,CACEC,WAAS,EACTL,GAAG,WACHM,MAAM,uCACNC,KAAK,WACLjB,WAAS,OAKjB,kBAACkB,EAAA,EAAD,KACE,kBAACrB,EAAA,EAAD,CAAQC,UAAWR,EAAQ6B,aAAcnB,WAAS,EAACG,QAASP,EAAaK,MAAM,UAAUC,QAAQ,aAAjG,sCChDJkB,EAAYC,aAAW,SAACC,GAAD,MAAU,CACrCC,QAAS,CACPC,QAAQ,OACRC,OAAO,QACPC,OAAO,kBAETC,SAAU,CACRC,SAAS,WACTC,KAAK,UACLL,QAAQ,OACRM,eAAe,SACfC,WAAW,SACXC,gBAAgB,UAChBC,SAAS,UAEXC,aAAc,CACZN,SAAS,WACTO,OAAQ,EACRC,QAAS,EACTC,UAAU,OACV,OAAQ,CACNpC,MAAM,QACNuB,QAAQ,OACRM,eAAe,SACfC,WAAW,WAGfO,iBAAkB,CAChBC,YAAa,IAEfC,gBAAiB,CACfZ,SAAS,WACTa,IAAI,MACJC,KAAK,MACLC,MAAM,OACNlB,OAAO,OACPmB,UAAU,yBAEZC,UAAW,CACTrB,QAAQ,OACRM,eAAe,SACfC,WAAW,SACXF,KAAK,UACLG,gBAAgB,SAElBc,iBAAkB,CAChBC,SAAS,OAEXhD,OAAQ,CACNoC,OAAO,WACPa,UAAU,aACVC,aAAa,QAEf9B,aAAc,CACZ+B,aAAc5B,EAAM6B,QAAQ,QAIjB,WAACC,GACd,IAAM9D,EAAU8B,IAIhB,OACE,yBAAKtB,UAAWR,EAAQiC,SACtB,6BAASzB,UAAWR,EAAQqC,UAC1B,kBAAC,IAAD,CAAa7B,UAAWR,EAAQkD,gBAAiBvC,MAAM,cACvD,wBAAIH,UAAWR,EAAQ4C,cACrB,4BACE,kBAACmB,EAAA,EAAD,CAAYnD,QAAQ,MAClB,kBAAC,IAAD,CAAoBJ,UAAWR,EAAQgD,mBADzC,WAKF,4BACE,kBAACe,EAAA,EAAD,CAAYnD,QAAQ,MAClB,kBAAC,IAAD,CAAuBJ,UAAWR,EAAQgD,mBAD5C,WAKF,4BACE,kBAACe,EAAA,EAAD,CAAYnD,QAAQ,MACpB,kBAAC,IAAD,CAA+BJ,UAAWR,EAAQgD,mBADlD,aAMN,6BAASxC,UAAWR,EAAQuD,WAC1B,yBAAK/C,UAAWR,EAAQwD,iBAAkBQ,MAAO,CAAC9C,UAAU,SAC1D,kBAAC,IAAD,CAAaP,MAAM,YACnB,kBAACoD,EAAA,EAAD,CAAYnD,QAAQ,MAApB,SACA,kBAACmD,EAAA,EAAD,CAAYnD,QAAQ,MAApB,2CACA,kBAAC,EAAD,CAAaX,MAAK,+GAAwBD,QAASA,IACnD,kBAAC,EAAD,CAAaC,MAAK,iCAAWD,QAASA,Q,8EC1DjCiE,EAnCD,SAAC,GAA2B,IAA1BjE,EAAyB,EAAzBA,QAASkE,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,KAC7B,OACE,wBAAI3D,UAAWR,EAAQoE,YACrB,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACT,QAAS,GACvB,kBAACQ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAACC,EAAA,EAAD,CAAQjE,UAAWR,EAAQ0E,YAAaC,IAAG,oIAA2BR,EAAKS,MAAQC,IAAKV,EAAKW,aAE/F,kBAACT,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACT,EAAA,EAAD,CAAYvD,UAAWR,EAAQ+E,YAC/B,2BAAIZ,EAAKS,MADT,IACmB,0BAAMpE,UAAWR,EAAQgF,gBAAiBb,EAAKc,QAElE,kBAAClB,EAAA,EAAD,CAAYnD,QAAQ,SACjBsD,GAEH,yBAAK1D,UAAWR,EAAQkF,eACtB,kBAACC,EAAA,EAAD,CAAY3E,UAAWR,EAAQoF,iBAC7B,kBAAC,IAAD,CAAa5E,UAAWR,EAAQqF,YAChC,0BAAMrB,MAAO,CAACsB,SAAU,KAAxB,MAEF,kBAACH,EAAA,EAAD,CAAY3E,UAAWR,EAAQoF,iBAC7B,kBAAC,IAAD,CAAY5E,UAAWR,EAAQqF,aAEjC,kBAACF,EAAA,EAAD,CAAY3E,UAAWR,EAAQoF,iBAC7B,kBAAC,IAAD,CAAU5E,UAAWR,EAAQqF,aAE/B,kBAACF,EAAA,EAAD,CAAY3E,UAAWR,EAAQoF,iBAC7B,kBAAC,IAAD,CAAU5E,UAAWR,EAAQqF,kB,2HClBrCvD,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCuD,MAAO,CACLrE,UAAU,QAEZsE,aAAc,CACZ3C,OAAQ,EACRC,QAAS,EACTC,UAAU,QAEZ0C,aAAc,CACZvD,QAAQ,OACRO,WAAW,SAEX,UAAW,CACT9B,MAAOqB,EAAM0D,QAAQC,QAAQC,MAG/B,mBAAoB,CAClBC,KAAM7D,EAAM0D,QAAQC,QAAQC,OAGhCE,kBAAmB,CACjBR,SAAU,GACVS,WAAY,IAEdC,aAAc,CACZV,SAAU,IAEZW,KAAM,CACJX,SAAU,IAEZY,cAAe,CACb/D,OAAO,OACPjB,UAAU,OACViF,UAAW,EACXC,aAAc,GAEhBC,aAAc,CACZvD,QAAQ,OACRwD,YAAa,EACbC,WAAY,EACZJ,UAAW,GAEbK,WAAY,CACV3D,OAAQ,EACRC,QAAS,EACTC,UAAU,QAEZqB,WAAY,CACVtB,QAAS,GACT,UAAW,CACTJ,gBAAgB,oBAElB+D,OAAO,WAET1B,WAAY,CACVO,SAAU,IAEZN,eAAgB,CACdrE,MAAO+F,KAAK,MAEdtB,gBAAiB,CACf,UAAW,CACTzE,MAAOqB,EAAM0D,QAAQC,QAAQC,OAGjCP,UAAW,CACTC,SAAU,IAEZJ,cAAe,CACbhD,QAAQ,OACRM,eAAe,gBACfa,MAAM,MACN0C,YAAa,IAEfrB,YAAa,CACXrB,MAAO,GACPlB,OAAQ,QAMNwE,GAAQ,CACZ,CACEC,IAAK,UACLhC,KAAM,SACNK,MAAO,UACPf,KAAM,GACNY,UAAU,yIAEZ,CACE8B,IAAI,WACJhC,KAAM,SACNK,MAAO,UACPf,KAAM,GACNY,UAAU,uIAEZ,CACE8B,IAAI,UACJhC,KAAM,SACNK,MAAO,UACPf,KAAM,GACNY,UAAW,0IAIT+B,GAAiBC,aAAW,SAAC9E,GAAD,MAAY,CAE5C+E,MAAO,CACLpD,aAAc,GACdrB,SAAU,WACVI,gBAAgB,UAChBN,OAAQ,oBACRkD,SAAU,GACVxC,QAAS,gBARUgE,CAUnBE,KAwFWC,GAtFF,WACX,IAAMjH,EAAU8B,KAChB,OACE,kBAACoF,EAAA,EAAD,CAAWzD,SAAS,MAClB,kBAACY,EAAA,EAAD,CAAMC,WAAS,EAACT,QAAS,GACvB,kBAACQ,EAAA,EAAD,CAAOE,MAAI,EAACC,GAAI,GACd,kBAAC2C,EAAA,EAAD,CAAOnD,MAAO,CAAC7B,OAAO,SAAW3B,UAAWR,EAAQuF,OAClD,wBAAI/E,UAAWR,EAAQwF,cACrB,wBAAIhF,UAAWR,EAAQyF,cACrB,kBAACN,EAAA,EAAD,CAAYnB,MAAO,CAACoD,WAAY,IAC9B,kBAAC,IAAD,CAAa5G,UAAWR,EAAQiG,KAAMtF,MAAM,cAGhD,wBAAIH,UAAWR,EAAQyF,cACrB,kBAACN,EAAA,EAAD,KACE,kBAAC,IAAD,CAAmB3E,UAAWR,EAAQgG,gBAExC,kBAACjC,EAAA,EAAD,CAAYvD,UAAWR,EAAQ8F,mBAA/B,kBAEF,wBAAItF,UAAWR,EAAQyF,cACrB,kBAACN,EAAA,EAAD,KACE,kBAAC,IAAD,CAAa3E,UAAWR,EAAQgG,gBAElC,kBAACjC,EAAA,EAAD,CAAYvD,UAAWR,EAAQ8F,mBAA/B,aAEF,wBAAItF,UAAWR,EAAQyF,cACrB,kBAACN,EAAA,EAAD,KACE,kBAAC,IAAD,CAAc3E,UAAWR,EAAQgG,gBAEnC,kBAACjC,EAAA,EAAD,CAAYvD,UAAWR,EAAQ8F,mBAA/B,cAEF,wBAAItF,UAAWR,EAAQyF,cACrB,kBAACN,EAAA,EAAD,KACE,kBAAC,IAAD,CAAY3E,UAAWR,EAAQgG,gBAEjC,kBAACjC,EAAA,EAAD,CAAYvD,UAAWR,EAAQ8F,mBAA/B,YAEF,wBAAItF,UAAWR,EAAQyF,cACrB,kBAACN,EAAA,EAAD,KACE,kBAAC,KAAD,CAAU3E,UAAWR,EAAQgG,gBAE/B,kBAACjC,EAAA,EAAD,CAAYvD,UAAWR,EAAQ8F,mBAA/B,SAEF,wBAAItF,UAAWR,EAAQyF,cACrB,kBAACN,EAAA,EAAD,KACE,kBAAC,IAAD,CAAY3E,UAAWR,EAAQgG,gBAEjC,kBAACjC,EAAA,EAAD,CAAYvD,UAAWR,EAAQ8F,mBAA/B,cAKR,kBAACzB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAAC2C,EAAA,EAAD,CAAO3G,UAAWR,EAAQkG,cAAetF,QAAQ,YAC/C,kBAACuG,EAAA,EAAD,CAAO3G,UAAWR,EAAQqG,aAAczF,QAAQ,YAC9C,kBAACmD,EAAA,EAAD,CAAYnD,QAAQ,MAApB,8CAGA,0BAAMoD,MAAO,CAAC7B,OAAO,YAGvB,wBAAI3B,UAAWR,EAAQwG,YACpBG,GAAMU,KAAI,SAAClD,GAAD,OACT,kBAAC,EAAD,CAAOmD,IAAKnD,EAAKyC,IAAK5G,QAASA,EAASkE,KArG9C,6HAqG0DC,KAAMA,UAQlE,kBAACE,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAEX,kBAACqC,GAAD,CACEnF,MAAM,iCACNhB,WAAS,EACT6G,YAAY,qG,SCnMXC,OAXf,WACE,OACE,yBAAKhH,UAAU,OACb,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAOiH,KAAK,UAAUC,UAAWC,IACjC,kBAAC,KAAD,CAAOF,KAAK,IAAIC,UAAaT,QCAjBW,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,uBCdOhG,GAAQiG,aAAe,CAClCpE,QAAS,EACT6B,QAAS,CACPC,QAAS,CACPC,KAAK,WAEPsC,UAAW,CACTtC,KAAK,c,SCFXuC,IAASC,OACP,kBAAC,IAAMC,SAAP,KACE,kBAACC,GAAA,EAAD,CAAetG,MAAOA,IACpB,kBAAC,KAAD,KACE,kBAAC,GAAD,SAINuG,SAASC,eAAe,SFkHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.07f90ba5.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { FormControl } from '@material-ui/core';\r\nimport { FormGroup } from '@material-ui/core';\r\nimport { Box } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\nexport default ({classes, title}) => {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  return ( <>\r\n      <Button className={classes.button} fullWidth  color=\"primary\" variant=\"outlined\" onClick={handleClickOpen}>{title}</Button> \r\n      <Dialog  open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">        \r\n        <Box textAlign=\"right\">\r\n          <CloseIcon color=\"primary\" onClick={handleClose}/>\r\n        </Box>\r\n        <DialogTitle id=\"form-dialog-title\">{title}</DialogTitle>\r\n        <DialogContent>          \r\n          <FormControl>\r\n            <FormGroup>\r\n              <TextField\r\n                autoFocus                \r\n                id=\"email\"\r\n                label=\"Почта\"\r\n                type=\"email\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                autoFocus                \r\n                id=\"password\"\r\n                label=\"Пароль\"\r\n                type=\"password\"\r\n                fullWidth\r\n              />\r\n            </FormGroup>                \r\n          </FormControl>          \r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Назад\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Войти\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>      \r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { FormControl } from '@material-ui/core';\r\nimport { FormGroup } from '@material-ui/core';\r\nimport { Box } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\nexport default ({classes, title}) => {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  return ( <>\r\n      <Button className={classes.button} fullWidth  color=\"primary\" variant=\"contained\" onClick={handleClickOpen}>{title}</Button> \r\n      <Dialog  open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">        \r\n        <Box textAlign=\"right\">\r\n          <CloseIcon color=\"primary\" onClick={handleClose}/>\r\n        </Box>\r\n        <DialogTitle id=\"form-dialog-title\">Создайте учетную запись</DialogTitle>\r\n        <DialogContent>          \r\n          <FormControl>\r\n            <FormGroup>\r\n              <TextField\r\n                autoFocus                \r\n                id=\"name\"\r\n                label=\"Имя\"\r\n                type=\"name\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                autoFocus                \r\n                id=\"email\"\r\n                label=\"Почта\"\r\n                type=\"email\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                autoFocus                \r\n                id=\"password\"\r\n                label=\"Пароль\"\r\n                type=\"password\"\r\n                fullWidth\r\n              />\r\n            </FormGroup>                \r\n          </FormControl>          \r\n        </DialogContent>\r\n        <DialogActions>          \r\n          <Button className={classes.signUpButton} fullWidth onClick={handleClose} color=\"primary\" variant=\"contained\">\r\n            Далее\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>      \r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport {makeStyles, Typography} from '@material-ui/core';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport SearchOutlinedIcon from '@material-ui/icons/SearchOutlined';\r\nimport PeopleAltOutlinedIcon from '@material-ui/icons/PeopleAltOutlined';\r\nimport ChatBubbleOutlineOutlinedIcon from '@material-ui/icons/ChatBubbleOutlineOutlined';\r\nimport SignInModal from './signin-modal';\r\nimport SignUpModal from './signup-modal';\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n  wrapper: {    \r\n    display: `flex`,\r\n    height: `100vh`,\r\n    border: `1px solid grey`,\r\n  },\r\n  blueSide: {\r\n    position: `relative`,\r\n    flex: `0 0 50%`,\r\n    display: `flex`,\r\n    justifyContent: `center`,\r\n    alignItems: `center`,\r\n    backgroundColor: `#1DA1F2`,\r\n    overflow: `hidden`,\r\n  },\r\n  blueSideList: {\r\n    position: `relative`,\r\n    margin: 0,\r\n    padding: 0,\r\n    listStyle: `none`,\r\n    '& h6': {\r\n      color: `white`,\r\n      display: `flex`,\r\n      justifyContent: `center`,\r\n      alignItems: `center`,\r\n    },\r\n  },\r\n  blueSideListIcon: {    \r\n    marginRight: 10,\r\n  },\r\n  blueSideBigIcon: {\r\n    position: `absolute`,\r\n    top: `35%`,\r\n    left: `45%`,\r\n    width: `250%`,\r\n    height: `250%`,\r\n    transform: `translate(-50%, -50%)`,\r\n  },\r\n  loginSide: {\r\n    display: `flex`,\r\n    justifyContent: `center`,\r\n    alignItems: `center`,\r\n    flex: `0 0 50%`,\r\n    backgroundColor: `white`,    \r\n  }, \r\n  loginSideWrapper: {\r\n    maxWidth: `80%`,    \r\n  }, \r\n  button: {    \r\n    margin: `5px auto`,\r\n    boxSizing: `border-box`,\r\n    borderRadius: `25px`, \r\n  },\r\n  signUpButton: {\r\n    marginBottom: theme.spacing(4),\r\n  },\r\n}));\r\n\r\nexport default (props)=> {\r\n  const classes = useStyles();\r\n\r\n  \r\n\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      <section className={classes.blueSide}>\r\n        <TwitterIcon className={classes.blueSideBigIcon} color=\"secondary\"/>  \r\n        <ul className={classes.blueSideList}>\r\n          <li>\r\n            <Typography variant=\"h6\">\r\n              <SearchOutlinedIcon className={classes.blueSideListIcon}/>\r\n              point1\r\n            </Typography>\r\n          </li>\r\n          <li>\r\n            <Typography variant=\"h6\">\r\n              <PeopleAltOutlinedIcon className={classes.blueSideListIcon}/>\r\n              point2\r\n            </Typography>\r\n          </li>\r\n          <li>\r\n            <Typography variant=\"h6\">\r\n            <ChatBubbleOutlineOutlinedIcon className={classes.blueSideListIcon}/>\r\n            point3</Typography>\r\n          </li>\r\n        </ul>\r\n      </section>\r\n      <section className={classes.loginSide}>\r\n        <div className={classes.loginSideWrapper} style={{textAlign: `left`}}>          \r\n          <TwitterIcon color=\"primary\"/>          \r\n          <Typography variant=\"h3\">Title</Typography>\r\n          <Typography variant=\"h4\">SmallSmaller titleSmaller titleer title</Typography>          \r\n          <SignUpModal title={`Зарегистрироваться`} classes={classes}/>      \r\n          <SignInModal title={`Войти`} classes={classes}/>\r\n        </div>\r\n      </section>      \r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Typography } from '@material-ui/core';\r\nimport { IconButton } from '@material-ui/core';\r\nimport RepeatIcon from '@material-ui/icons/RepeatOutlined';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport CommentIcon from '@material-ui/icons/ChatBubbleOutlineOutlined';\r\nimport LikeIcon from '@material-ui/icons/FavoriteBorderOutlined';\r\nimport SendIcon from '@material-ui/icons/SendOutlined';\r\n\r\nconst Tweet = ({classes, text, user}) => {\r\n  return (\r\n    <li className={classes.tweetsItem}>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={1}>\r\n          <Avatar className={classes.tweetAvatar} alt={`Аватарка пользователя ${user.name}`} src={user.avatarUrl} />\r\n        </Grid>\r\n        <Grid item xs={11}>\r\n          <Typography className={classes.tweetsUser}>\r\n          <b>{user.name}</b> <span className={classes.tweetsUserName}>{user.email}</span>\r\n          </Typography>\r\n          <Typography variant=\"body1\">\r\n            {text}\r\n          </Typography>\r\n          <div className={classes.tweetControls}>\r\n            <IconButton className={classes.tweetIconButton}>\r\n              <CommentIcon className={classes.tweetIcon}/>\r\n              <span style={{fontSize: 14}}>1</span>\r\n            </IconButton>\r\n            <IconButton className={classes.tweetIconButton}>\r\n              <RepeatIcon className={classes.tweetIcon}/>                       \r\n            </IconButton>\r\n            <IconButton className={classes.tweetIconButton}>\r\n              <LikeIcon className={classes.tweetIcon}/>                        \r\n            </IconButton >\r\n            <IconButton className={classes.tweetIconButton}>\r\n              <SendIcon className={classes.tweetIcon}/>                        \r\n            </IconButton>                      \r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Tweet;\r\n","import React from 'react';\r\nimport Tweet from './tweet';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Container} from '@material-ui/core';\r\nimport { Typography } from '@material-ui/core';\r\nimport { IconButton } from '@material-ui/core';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport NotificationsIcon from '@material-ui/icons/NotificationsNoneOutlined';\r\nimport MessageIcon from '@material-ui/icons/EmailOutlined';\r\nimport BookmarkIcon from '@material-ui/icons/BookmarkBorderOutlined';\r\nimport RepeatIcon from '@material-ui/icons/RepeatOutlined';\r\nimport UserIcon from '@material-ui/icons/PersonOutlineOutlined';\r\nimport SearchIcon from '@material-ui/icons/SearchOutlined';\r\nimport grey from '@material-ui/core/colors/grey';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    textAlign: `left`,\r\n  },\r\n  sideMenuList: {\r\n    margin: 0,\r\n    padding: 0,\r\n    listStyle: `none`,\r\n  },\r\n  sideMenuItem: {\r\n    display: `flex`,\r\n    alignItems: `center`,\r\n\r\n    '&:hover': {\r\n      color: theme.palette.primary.main,\r\n    },\r\n\r\n    '&:hover svg path': {\r\n      fill: theme.palette.primary.main,\r\n    }\r\n  },\r\n  sideMenuItemLabel: {\r\n    fontSize: 16,\r\n    marginLeft: 10,\r\n  },\r\n  sideMenuIcon: {\r\n    fontSize: 30,\r\n  },\r\n  logo: {    \r\n    fontSize: 32,\r\n  },\r\n  tweetsWrapper: {\r\n    height: `100%`,\r\n    textAlign: `left`,\r\n    borderTop: 0,\r\n    borderBottom: 0,\r\n  },\r\n  tweetsHeader: {\r\n    padding: `10px`,\r\n    borderRight: 0,\r\n    borderLeft: 0,\r\n    borderTop: 0,\r\n  },\r\n  tweetsList: {\r\n    margin: 0,\r\n    padding: 0,\r\n    listStyle: `none`,\r\n  },\r\n  tweetsItem: {\r\n    padding: 10,\r\n    '&:hover': {\r\n      backgroundColor: `rgb(248,250,200)`\r\n    },\r\n    cursor: `pointer`,\r\n  },\r\n  tweetsUser: {\r\n    fontSize: 14\r\n  },\r\n  tweetsUserName: {\r\n    color: grey[500],\r\n  },\r\n  tweetIconButton: {\r\n    '&:hover': {\r\n      color: theme.palette.primary.main,\r\n    },\r\n  },\r\n  tweetIcon: {\r\n    fontSize: 18,         \r\n  },\r\n  tweetControls: {\r\n    display: `flex`,\r\n    justifyContent: `space-between`,\r\n    width: `80%`,\r\n    marginLeft: -13,\r\n  },\r\n  tweetAvatar: {\r\n    width: 40,\r\n    height: 40,\r\n  }\r\n}));\r\n\r\nconst text = `The following npm package, @material-ui/icons, includes the 1,100+ official Material icons converted to SvgIcon components`;\r\n\r\nconst users = [\r\n  {\r\n    _id: 'ddsdsds',\r\n    name: 'Natali',\r\n    email: '@natali',\r\n    text: '',\r\n    avatarUrl: `https://images.unsplash.com/photo-1537815749002-de6a533c64db?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=845&q=80`\r\n  },\r\n  {\r\n    _id: `jhjhjkhk`,\r\n    name: 'Natali',\r\n    email: '@natali',\r\n    text: '',\r\n    avatarUrl: `https://images.unsplash.com/photo-1558898479-33c0057a5d12?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80`\r\n  },\r\n  {\r\n    _id: `kokoooo`,\r\n    name: 'Natali',\r\n    email: '@natali',\r\n    text: '',\r\n    avatarUrl: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=634&q=80'\r\n  },\r\n];\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n  \r\n  input: {\r\n    borderRadius: 40,\r\n    position: 'relative',\r\n    backgroundColor: `#ced4da`,\r\n    border: '1px solid #ced4da',\r\n    fontSize: 16,    \r\n    padding: '10px 12px',    \r\n  },\r\n}))(InputBase);\r\n\r\nconst Home = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <Grid container spacing={3}>        \r\n        <Grid  item xs={3}>\r\n          <Paper style={{height: `100vh`}} className={classes.paper}>            \r\n            <ul className={classes.sideMenuList}>\r\n              <li className={classes.sideMenuItem}>\r\n                <IconButton style={{paddingTop: 0}}>\r\n                  <TwitterIcon className={classes.logo} color=\"primary\"/>\r\n                </IconButton>                \r\n              </li>\r\n              <li className={classes.sideMenuItem}>\r\n                <IconButton>\r\n                  <NotificationsIcon className={classes.sideMenuIcon} />\r\n                </IconButton>   \r\n                <Typography className={classes.sideMenuItemLabel} >Notifications</Typography>\r\n              </li>\r\n              <li className={classes.sideMenuItem}>\r\n                <IconButton>\r\n                  <MessageIcon className={classes.sideMenuIcon} />\r\n                </IconButton>   \r\n                <Typography className={classes.sideMenuItemLabel} >Messages</Typography>\r\n              </li>\r\n              <li className={classes.sideMenuItem}>\r\n                <IconButton>\r\n                  <BookmarkIcon className={classes.sideMenuIcon} />\r\n                </IconButton>   \r\n                <Typography className={classes.sideMenuItemLabel} >BookMarks</Typography>\r\n              </li>\r\n              <li className={classes.sideMenuItem}>\r\n                <IconButton>\r\n                  <RepeatIcon className={classes.sideMenuIcon} />\r\n                </IconButton>   \r\n                <Typography className={classes.sideMenuItemLabel} >Repeats</Typography>\r\n              </li>\r\n              <li className={classes.sideMenuItem}>\r\n                <IconButton>\r\n                  <UserIcon className={classes.sideMenuIcon} />\r\n                </IconButton>   \r\n                <Typography className={classes.sideMenuItemLabel} >User</Typography>\r\n              </li>\r\n              <li className={classes.sideMenuItem}>\r\n                <IconButton>\r\n                  <SearchIcon className={classes.sideMenuIcon} />\r\n                </IconButton>   \r\n                <Typography className={classes.sideMenuItemLabel} >Search</Typography>\r\n              </li>\r\n            </ul>          \r\n          </Paper>       \r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Paper className={classes.tweetsWrapper} variant=\"outlined\">\r\n            <Paper className={classes.tweetsHeader} variant=\"outlined\">\r\n              <Typography variant=\"h6\">\r\n                Главная                \r\n              </Typography>\r\n              <form style={{height: `100px`}}>\r\n              </form>\r\n            </Paper>            \r\n            <ul className={classes.tweetsList}>\r\n              {users.map((user)=>\r\n                <Tweet key={user._id} classes={classes} text={text} user={user}/>\r\n              )}\r\n              \r\n              \r\n                      \r\n            </ul>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          {/* <Paper className={classes.paper}> */}\r\n            <BootstrapInput              \r\n              label=\"Поиск\"              \r\n              fullWidth\r\n              placeholder=\"Поиск по твиттеру\"\r\n              \r\n            />\r\n          {/* </Paper> */}\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport SignIn from './signin';\r\nimport Home from './home';\r\nimport {Switch, Route} from 'react-router-dom';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Switch>\r\n        <Route path=\"/signin\" component={SignIn} />\r\n        <Route path=\"/\" component = {Home} />              \r\n      </Switch>      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\nimport purple from '@material-ui/core/colors/purple';\r\nimport green from '@material-ui/core/colors/green';\r\n\r\nexport const theme = createMuiTheme({\r\n  spacing: 5,\r\n  palette: {\r\n    primary: {\r\n      main: `#1DA1F2`,\r\n    },\r\n    secondary: {\r\n      main: `#039be5`,\r\n    },\r\n  },\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport {theme} from './theme.js';\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.Fragment>\r\n    <ThemeProvider theme={theme}>\r\n      <Router>\r\n        <App />\r\n      </Router>      \r\n    </ThemeProvider>\r\n  </React.Fragment>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}