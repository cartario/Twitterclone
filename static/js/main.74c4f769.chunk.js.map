{"version":3,"sources":["signin-modal.jsx","signup-modal.jsx","signin.jsx","add-tweet.jsx","modal-block.jsx","side-menu.jsx","tweet.jsx","side-home-right.jsx","home.jsx","App.js","serviceWorker.js","theme.js","index.js"],"names":["classes","title","React","useState","open","setOpen","handleClose","Button","className","button","fullWidth","color","variant","onClick","Dialog","onClose","aria-labelledby","Box","textAlign","DialogTitle","id","DialogContent","FormControl","FormGroup","TextField","autoFocus","label","type","DialogActions","signUpButton","useStyles","makeStyles","theme","wrapper","display","height","border","blueSide","position","flex","justifyContent","alignItems","backgroundColor","overflow","blueSideList","margin","padding","listStyle","blueSideListIcon","marginRight","blueSideBigIcon","top","left","width","transform","loginSide","loginSideWrapper","maxWidth","boxSizing","borderRadius","marginBottom","spacing","props","Typography","style","AddTweet","maxRows","text","setText","textLength","length","progressBar","isValid","Grid","container","item","xs","Avatar","alt","src","TextareaAutosize","addTweetTextarea","placeholder","onChange","e","target","value","rowsMax","addTweetControls","addTweetControlsLeftSide","addTweetControlsRightSide","undefined","addTweetControlsCircularProgress","CircularProgress","size","disabled","addTweetButton","withStyles","root","closeButton","right","palette","grey","children","other","disableTypography","IconButton","aria-label","MuiDialogContent","CustomizedDialogs","modalTitle","isVisible","SideMenu","isVisibleAddTweet","setVisibleAddTweet","Paper","paper","sideMenuList","sideMenuItem","marginTop","paddingTop","logo","sideMenuIcon","Hidden","smDown","sideMenuItemLabel","sideMenuButton","mdUp","Tweet","user","tweetsItem","tweetAvatar","name","avatarUrl","tweetsUser","tweetsUserName","email","date","tweetControls","tweetIconButton","tweetIcon","fontSize","rightSideList","rightSideListTitle","rightSideItemAvatar","themeNews","tweetsCount","SideHomeRight","List","ListItem","vatiant","Divider","component","ListItemText","primary","secondary","cursor","transition","main","fill","marginLeft","searchFieldWrap","zIndex","searchField","tweetsWrapper","borderTop","borderBottom","tweetsHeader","borderRight","borderLeft","tweetsList","fontFamily","outline","resize","users","_id","Home","Container","sm","map","key","InputBase","App","path","SignIn","Boolean","window","location","hostname","match","createMuiTheme","ReactDOM","render","Fragment","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.74c4f769.chunk.js","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { FormControl } from '@material-ui/core';\nimport { FormGroup } from '@material-ui/core';\nimport { Box } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\n\n\nexport default ({classes, title}) => {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  return ( <>\n      <Button className={classes.button} fullWidth  color=\"primary\" variant=\"outlined\" onClick={handleClickOpen}>{title}</Button> \n      <Dialog  open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">        \n        <Box textAlign=\"right\">\n          <CloseIcon color=\"primary\" onClick={handleClose}/>\n        </Box>\n        <DialogTitle id=\"form-dialog-title\">{title}</DialogTitle>\n        <DialogContent>          \n          <FormControl>\n            <FormGroup>\n              <TextField\n                autoFocus                \n                id=\"email\"\n                label=\"Почта\"\n                type=\"email\"\n                fullWidth\n              />\n              <TextField\n                autoFocus                \n                id=\"password\"\n                label=\"Пароль\"\n                type=\"password\"\n                fullWidth\n              />\n            </FormGroup>                \n          </FormControl>          \n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Назад\n          </Button>\n          <Button onClick={handleClose} color=\"primary\">\n            Войти\n          </Button>\n        </DialogActions>\n      </Dialog>      \n    </>\n  );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { FormControl } from '@material-ui/core';\nimport { FormGroup } from '@material-ui/core';\nimport { Box } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\n\n\nexport default ({classes, title}) => {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  return ( <>\n      <Button className={classes.button} fullWidth  color=\"primary\" variant=\"contained\" onClick={handleClickOpen}>{title}</Button> \n      <Dialog  open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">        \n        <Box textAlign=\"right\">\n          <CloseIcon color=\"primary\" onClick={handleClose}/>\n        </Box>\n        <DialogTitle id=\"form-dialog-title\">Создайте учетную запись</DialogTitle>\n        <DialogContent>          \n          <FormControl>\n            <FormGroup>\n              <TextField\n                autoFocus                \n                id=\"name\"\n                label=\"Имя\"\n                type=\"name\"\n                fullWidth\n              />\n              <TextField\n                autoFocus                \n                id=\"email\"\n                label=\"Почта\"\n                type=\"email\"\n                fullWidth\n              />\n              <TextField\n                autoFocus                \n                id=\"password\"\n                label=\"Пароль\"\n                type=\"password\"\n                fullWidth\n              />\n            </FormGroup>                \n          </FormControl>          \n        </DialogContent>\n        <DialogActions>          \n          <Button className={classes.signUpButton} fullWidth onClick={handleClose} color=\"primary\" variant=\"contained\">\n            Далее\n          </Button>\n        </DialogActions>\n      </Dialog>      \n    </>\n  );\n}\n","import React from 'react';\nimport {makeStyles, Typography} from '@material-ui/core';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport SearchOutlinedIcon from '@material-ui/icons/SearchOutlined';\nimport PeopleAltOutlinedIcon from '@material-ui/icons/PeopleAltOutlined';\nimport ChatBubbleOutlineOutlinedIcon from '@material-ui/icons/ChatBubbleOutlineOutlined';\nimport SignInModal from './signin-modal';\nimport SignUpModal from './signup-modal';\n\nconst useStyles = makeStyles((theme)=>({\n  wrapper: {    \n    display: `flex`,\n    height: `100vh`,\n    border: `1px solid grey`,\n  },\n  blueSide: {\n    position: `relative`,\n    flex: `0 0 50%`,\n    display: `flex`,\n    justifyContent: `center`,\n    alignItems: `center`,\n    backgroundColor: `#1DA1F2`,\n    overflow: `hidden`,\n  },\n  blueSideList: {\n    position: `relative`,\n    margin: 0,\n    padding: 0,\n    listStyle: `none`,\n    '& h6': {\n      color: `white`,\n      display: `flex`,\n      justifyContent: `center`,\n      alignItems: `center`,\n    },\n  },\n  blueSideListIcon: {    \n    marginRight: 10,\n  },\n  blueSideBigIcon: {\n    position: `absolute`,\n    top: `35%`,\n    left: `45%`,\n    width: `250%`,\n    height: `250%`,\n    transform: `translate(-50%, -50%)`,\n  },\n  loginSide: {\n    display: `flex`,\n    justifyContent: `center`,\n    alignItems: `center`,\n    flex: `0 0 50%`,\n    backgroundColor: `white`,    \n  }, \n  loginSideWrapper: {\n    maxWidth: `80%`,    \n  }, \n  button: {    \n    margin: `5px auto`,\n    boxSizing: `border-box`,\n    borderRadius: `25px`, \n  },\n  signUpButton: {\n    marginBottom: theme.spacing(4),\n  },\n}));\n\nexport default (props)=> {\n  const classes = useStyles();\n\n  \n\n  return (\n    <div className={classes.wrapper}>\n      <section className={classes.blueSide}>\n        <TwitterIcon className={classes.blueSideBigIcon} color=\"secondary\"/>  \n        <ul className={classes.blueSideList}>\n          <li>\n            <Typography variant=\"h6\">\n              <SearchOutlinedIcon className={classes.blueSideListIcon}/>\n              point1\n            </Typography>\n          </li>\n          <li>\n            <Typography variant=\"h6\">\n              <PeopleAltOutlinedIcon className={classes.blueSideListIcon}/>\n              point2\n            </Typography>\n          </li>\n          <li>\n            <Typography variant=\"h6\">\n            <ChatBubbleOutlineOutlinedIcon className={classes.blueSideListIcon}/>\n            point3</Typography>\n          </li>\n        </ul>\n      </section>\n      <section className={classes.loginSide}>\n        <div className={classes.loginSideWrapper} style={{textAlign: `left`}}>          \n          <TwitterIcon color=\"primary\"/>          \n          <Typography variant=\"h3\">Title</Typography>\n          <Typography variant=\"h4\">SmallSmaller titleSmaller titleer title</Typography>          \n          <SignUpModal title={`Зарегистрироваться`} classes={classes}/>      \n          <SignInModal title={`Войти`} classes={classes}/>\n        </div>\n      </section>      \n    </div>\n  );\n};\n","import React, {useState} from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport { TextareaAutosize, Button, CircularProgress  } from '@material-ui/core';\nimport FileIcon from '@material-ui/icons/BrokenImageOutlined';\nimport SmileIcon from '@material-ui/icons/SentimentSatisfiedOutlined';\n\nconst TEXT_MAX_LENGTH = 10;\n\nconst AddTweet = ({classes, maxRows}) => {\n  const [text, setText] = useState(``);\n\n  const textLength = text.length;\n  const progressBar = (1- (TEXT_MAX_LENGTH - textLength) / TEXT_MAX_LENGTH) * 100;  \n  const isValid = TEXT_MAX_LENGTH - textLength < 0 ? false : true;\n\n  const handleChange = (e) => {    \n    setText(e.target.value);      \n  };\n\n  const handleClickAddTweet = () => {\n    setText(text);    \n  };\n\n  return (    \n    <Grid container > \n      <Grid item xs={1}>\n        <Avatar alt=\"avatar\" src=\"https://images.unsplash.com/photo-1527980965255-d3b416303d12?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1400&q=80\"/>\n      </Grid>\n      <Grid item xs={11}>\n        <TextareaAutosize className={classes.addTweetTextarea} placeholder=\"Что происходит?\"  onChange={handleChange} rowsMax={maxRows}/>\n        <div className={classes.addTweetControls}>\n          <div className={classes.addTweetControlsLeftSide}>\n            <FileIcon color=\"primary\"/>\n            <SmileIcon color=\"primary\"/>  \n          </div>\n          <div className={classes.addTweetControlsRightSide}>\n            <span style={isValid ? undefined: {color: `red`}}>{TEXT_MAX_LENGTH - textLength}</span>\n            <div className={classes.addTweetControlsCircularProgress}>\n              <CircularProgress variant=\"static\" value={isValid ? progressBar : 100} size={20}\n              style={isValid ? undefined: {color: `red`}}\n              />\n              <CircularProgress style={{color: `rgba(0,0,0,0.3)`, position: `absolute`, left: 0}} variant=\"static\" value={100} size={20}/>\n            </div>            \n            <Button \n              disabled={!isValid || !text}\n              className={classes.addTweetButton} variant=\"contained\" color=\"primary\"\n              onClick={handleClickAddTweet}\n            >Твитнуть</Button>\n          </div>\n        </div>\n      </Grid>\n    </Grid>    \n  );\n};\n\nexport default AddTweet;\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n    \n  },\n}))(MuiDialogContent);\n\n\n\nexport default function CustomizedDialogs({modalTitle, children, isVisible, handleClose}) {\n  return (         \n      <Dialog onClose={handleClose} open={isVisible} >        \n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n          {modalTitle}\n        </DialogTitle>\n        <DialogContent>\n          {children}\n        </DialogContent>            \n      </Dialog>         \n  );\n}\n","import React, {useState} from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { Button} from '@material-ui/core';\nimport { Hidden} from '@material-ui/core';\nimport { Typography} from '@material-ui/core';\nimport { IconButton } from '@material-ui/core';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport NotificationsIcon from '@material-ui/icons/NotificationsNoneOutlined';\nimport MessageIcon from '@material-ui/icons/EmailOutlined';\nimport BookmarkIcon from '@material-ui/icons/BookmarkBorderOutlined';\nimport RepeatIcon from '@material-ui/icons/RepeatOutlined';\nimport UserIcon from '@material-ui/icons/PersonOutlineOutlined';\nimport SearchIcon from '@material-ui/icons/SearchOutlined';\nimport CreateIcon from '@material-ui/icons/CreateOutlined';\nimport AddTweet from './add-tweet';\nimport ModalBlock from './modal-block';\n\nconst SideMenu = ({classes}) => {\n  const [isVisibleAddTweet, setVisibleAddTweet] = useState(false);\n\n  const handleCloseModal = () => {\n    setVisibleAddTweet(false);\n  };\n\n  const handleClickOpenModal = () => {\n    setVisibleAddTweet(true);\n  };\n\n  return (\n    <Paper style={{height: `100%`}} className={classes.paper}>            \n      <ul className={classes.sideMenuList}>\n        <li className={classes.sideMenuItem} style={{marginTop: 0}}>\n          <IconButton style={{paddingTop: 0}}>\n            <TwitterIcon className={classes.logo} color=\"primary\"/>\n          </IconButton>                \n        </li>\n        <li className={classes.sideMenuItem}>\n          <IconButton>\n            <NotificationsIcon className={classes.sideMenuIcon} />\n          </IconButton>\n          <Hidden smDown>\n            <Typography className={classes.sideMenuItemLabel} >Notifications</Typography>\n          </Hidden>  \n          \n        </li>\n        <li className={classes.sideMenuItem}>\n          <IconButton>\n            <MessageIcon className={classes.sideMenuIcon} />\n          </IconButton>\n          <Hidden smDown>\n            <Typography className={classes.sideMenuItemLabel} >Messages</Typography>\n          </Hidden>\n          \n        </li>\n        <li className={classes.sideMenuItem}>\n          <IconButton>\n            <BookmarkIcon className={classes.sideMenuIcon} />\n          </IconButton>\n          <Hidden smDown>\n            <Typography className={classes.sideMenuItemLabel} >BookMarks</Typography>\n          </Hidden>\n\n        </li>\n        <li className={classes.sideMenuItem}>\n          <IconButton>\n            <RepeatIcon className={classes.sideMenuIcon} />\n          </IconButton> \n          <Hidden smDown>  \n            <Typography className={classes.sideMenuItemLabel} >Repeats</Typography>\n          </Hidden>\n        </li>\n        <li className={classes.sideMenuItem}>\n          <IconButton>\n            <UserIcon className={classes.sideMenuIcon} />\n          </IconButton> \n          <Hidden smDown> \n            <Typography className={classes.sideMenuItemLabel} >User</Typography>\n          </Hidden> \n        </li>\n        <li className={classes.sideMenuItem}>\n          <IconButton>\n            <SearchIcon className={classes.sideMenuIcon} />\n          </IconButton> \n          <Hidden smDown>  \n            <Typography className={classes.sideMenuItemLabel} >Search</Typography>\n          </Hidden>\n        </li>\n        <li className={classes.sideMenuItem}>          \n          <Button className={classes.sideMenuButton} onClick={handleClickOpenModal} variant=\"contained\" color=\"primary\" fullWidth>\n            <Hidden smDown>Твитнуть</Hidden> \n            <Hidden mdUp>          \n              <CreateIcon className={classes.sideMenuIcon}/>            \n            </Hidden> \n          </Button>            \n        </li>\n        <ModalBlock \n          isVisible={isVisibleAddTweet}\n          handleClose={handleCloseModal}          \n          modalTitle={``}>          \n            <div style={{width: `500px`}} >\n              <AddTweet classes={classes} maxRows={10}/>\n            </div>\n        </ModalBlock> \n      </ul>\n      \n    </Paper>\n  );\n};\n\nexport default SideMenu;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { Typography } from '@material-ui/core';\nimport { IconButton } from '@material-ui/core';\nimport RepeatIcon from '@material-ui/icons/RepeatOutlined';\nimport Avatar from '@material-ui/core/Avatar';\nimport CommentIcon from '@material-ui/icons/ChatBubbleOutlineOutlined';\nimport LikeIcon from '@material-ui/icons/FavoriteBorderOutlined';\nimport SendIcon from '@material-ui/icons/SendOutlined';\n\nconst Tweet = ({classes, text, user}) => {\n  return (\n    <li className={classes.tweetsItem}>\n      <Grid container spacing={1}>\n        <Grid item xs={1}>\n          <Avatar className={classes.tweetAvatar} alt={`Аватарка пользователя ${user.name}`} src={user.avatarUrl} />\n        </Grid>\n        <Grid item xs={11}>\n          <Typography className={classes.tweetsUser}>\n          <b>{user.name}</b>\n          <span className={classes.tweetsUserName}>{user.email}</span>\n          <span className={classes.tweetsUserName}>-</span>\n          <span className={classes.tweetsUserName}>{user.date}</span>\n          </Typography>\n          <Typography variant=\"body1\">\n            {text}\n          </Typography>\n          <div className={classes.tweetControls}>\n            <IconButton className={classes.tweetIconButton}>\n              <CommentIcon className={classes.tweetIcon}/>\n              <span style={{fontSize: 14}}>1</span>\n            </IconButton>\n            <IconButton className={classes.tweetIconButton}>\n              <RepeatIcon className={classes.tweetIcon}/>                       \n            </IconButton>\n            <IconButton className={classes.tweetIconButton}>\n              <LikeIcon className={classes.tweetIcon}/>                        \n            </IconButton >\n            <IconButton className={classes.tweetIconButton}>\n              <SendIcon className={classes.tweetIcon}/>                        \n            </IconButton>                      \n          </div>\n        </Grid>\n      </Grid>\n    </li>\n  );\n};\n\nexport default Tweet;\n","import React from 'react';\nimport {makeStyles, List, ListItem, ListItemText, Divider, Typography, Avatar, IconButton} from '@material-ui/core';\nimport AddUserIcon from '@material-ui/icons/PersonAddOutlined';\n\nconst useStyles = makeStyles((theme)=>({\n  rightSideList: {\n    marginTop: 10,\n    borderRadius: `10px`,\n    backgroundColor: `#ced4da`,\n  },\n  rightSideListTitle: {\n    \n  },\n  rightSideItemAvatar: {\n    marginRight: 20,\n  },\n}));\n\nconst themeNews = ['Санкт-Петербург','#коронавирус','Беларусь'];\nconst tweetsCount = [3331, 234, 5767];\nconst user = {\n  name: [`alex`,`naasha`,`dimon`],\n  mail: [`@alwx`,`@naasha`,`@dimon`],\n};\n\nconst SideHomeRight = () => {\n  const classes = useStyles();\n  return (<>\n    <List className={classes.rightSideList}>\n      <ListItem>\n        <Typography className={classes.rightSideListTitle} vatiant=\"h2\"><b>Актуальные темы</b></Typography>\n      </ListItem>\n      <Divider component=\"li\"/>\n      <ListItem button>        \n        <ListItemText primary={themeNews[0]} secondary={`Твитов: ${tweetsCount[0]}`}/>\n      </ListItem>\n      <Divider component=\"li\"/>\n      <ListItem button> \n        <ListItemText primary={themeNews[1]} secondary={`Твитов: ${tweetsCount[1]}`}/>\n      </ListItem>\n      <Divider component=\"li\"/>\n      <ListItem button>\n        <ListItemText primary={themeNews[2]} secondary={`Твитов: ${tweetsCount[2]}`}/>\n      </ListItem>\n      <Divider component=\"li\"/>\n    </List>\n    <List className={classes.rightSideList}>\n      <ListItem>\n        <Typography className={classes.rightSideListTitle} vatiant=\"h2\"><b>Кого читать</b></Typography>\n      </ListItem>\n      <Divider component=\"li\"/>\n      <ListItem button>\n        <Avatar className={classes.rightSideItemAvatar} alt=\"Remy Sharp\" src=\"https://images.unsplash.com/photo-1569913486515-b74bf7751574?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=935&q=80\"/>\n        <ListItemText primary={user.name[0]} secondary={user.mail[0]}/>\n        <IconButton>\n          <AddUserIcon color=\"primary\"/>\n        </IconButton>\n      </ListItem>\n      <Divider component=\"li\"/>\n      <ListItem button> \n        <Avatar className={classes.rightSideItemAvatar} alt=\"Remy Sharp\" src=\"https://images.unsplash.com/photo-1599566150163-29194dcaad36?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2734&q=80\"/>\n        <ListItemText primary={user.name[1]} secondary={user.mail[1]}/>\n        <IconButton>\n          <AddUserIcon color=\"primary\"/>\n        </IconButton>\n      </ListItem>\n      <Divider component=\"li\"/>\n      <ListItem button>\n        <Avatar className={classes.rightSideItemAvatar} alt=\"Remy Sharp\" src=\"https://images.unsplash.com/photo-1543610892-0b1f7e6d8ac1?ixlib=rb-1.2.1&auto=format&fit=crop&w=1856&q=80\"/>\n        <ListItemText primary={user.name[2]} secondary={user.mail[2]}/>\n        <IconButton>\n          <AddUserIcon color=\"primary\"/>\n        </IconButton>        \n      </ListItem>\n      <Divider component=\"li\"/>\n    </List>\n    </>\n  );\n};\n\nexport default SideHomeRight;\n","import React from 'react';\nimport SideMenu from './side-menu';\nimport AddTweet from './add-tweet';\nimport Tweet from './tweet';\nimport { makeStyles,} from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { Container} from '@material-ui/core';\nimport { Typography, IconButton} from '@material-ui/core';\nimport InputBase from '@material-ui/core/InputBase';\nimport grey from '@material-ui/core/colors/grey';\nimport SearchIcon from '@material-ui/icons/Search';\nimport SideHomeRight from './side-home-right';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {    \n    textAlign: `left`,\n  },\n  sideMenuList: {\n    position: `sticky`,\n    top: 0,\n    margin: 0,\n    padding: 0,\n    listStyle: `none`,\n  },\n  sideMenuItem: {\n    display: `flex`,\n    alignItems: `center`,\n    margin: `10px 0`,\n    cursor: `pointer`,\n    transition: `all 0.2s ease`,\n\n    '&:hover': {\n      color: theme.palette.primary.main,\n      backgroundColor: `rgba(29, 161, 242, 0.1)`,\n      borderRadius: 30,\n    },\n\n    '&:hover svg path': {\n      fill: theme.palette.primary.main,\n    }\n  },\n  sideMenuItemLabel: {\n    fontSize: 16,\n    marginLeft: 10,\n  },\n  sideMenuIcon: {\n    fontSize: 30,\n  },\n  sideMenuButton: {\n    margin: `5px auto`,\n    boxSizing: `border-box`,\n    borderRadius: `25px`,\n    color: `white`\n  },\n  logo: {    \n    fontSize: 32,\n  },\n  searchFieldWrap: {\n    display: `flex`,\n    position: `sticky`,\n    top: 0,\n    zIndex: 1,  \n    backgroundColor: `#ced4da`,\n    borderRadius: 40,    \n  },\n  searchField: {    \n    padding: `10px 15px`,       \n    fontSize: 16,    \n  },\n  tweetsWrapper: {\n    height: `100%`,\n    textAlign: `left`,\n    borderTop: 0,\n    borderBottom: 0,\n  },\n  tweetsHeader: {\n    position: `sticky`,\n    top: 0,\n    zIndex: 1,\n    padding: `10px`,\n    borderRight: 0,\n    borderLeft: 0,\n    borderTop: 0,\n  },\n  tweetsList: {\n    margin: 0,\n    padding: 0,\n    listStyle: `none`,\n    borderTop: `10px solid rgba(0,0,0,0.1)`\n  },\n  tweetsItem: {\n    padding: 10,\n    '&:hover': {\n      backgroundColor: `rgb(248,250,200)`\n    },\n    cursor: `pointer`,\n  },\n  tweetsUser: {\n    fontSize: 14\n  },\n  tweetsUserName: {\n    color: grey[500],\n  },\n  tweetIconButton: {\n    '&:hover': {\n      color: theme.palette.primary.main,\n    },\n  },\n  tweetIcon: {\n    fontSize: 18,         \n  },\n  tweetControls: {\n    display: `flex`,\n    justifyContent: `space-between`,\n    width: `80%`,\n    marginLeft: -13,\n  },\n  tweetAvatar: {\n    width: 40,\n    height: 40,\n  },\n  addTweetTextarea: {\n    width: `100%`,\n    fontFamily: `inherit`,\n    fontSize: 16,\n    border: 0,\n    outline: 'none',\n    resize: `none`,\n  },\n  addTweetControls: {\n    display: `flex`, \n    justifyContent: `space-between`,\n    marginTop: 30,\n  },\n  addTweetControlsLeftSide: {\n    display: `flex`,\n    alignItems: `center`,\n  },\n  addTweetControlsRightSide: {\n    display: `flex`,\n    alignItems: `center`,\n  },\n  addTweetControlsCircularProgress: {\n    position: `relative`,\n    margin: `0 10px`,\n    display: `flex`, \n    alignItems: `center`,\n  },\n  addTweetButton: {\n    margin: `0 10px`,\n    borderRadius: 30,\n    color: `white`,\n  },\n}));\n\nconst text = `The following npm package, @material-ui/icons, includes the 1,100+ official Material icons converted to SvgIcon components`;\n\nconst users = [\n  {\n    _id: 'ddsdsds',\n    name: 'Natali',\n    email: '@natali',\n    text: '',\n    avatarUrl: `https://images.unsplash.com/photo-1537815749002-de6a533c64db?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=845&q=80`,\n    date: `1 hour ago`,\n  },\n  {\n    _id: `jhjhjkhk`,\n    name: 'Natali',\n    email: '@natali',\n    text: '',\n    avatarUrl: `https://images.unsplash.com/photo-1558898479-33c0057a5d12?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80`\n  },\n  {\n    _id: `kowkoooo`,\n    name: 'Natali',\n    email: '@natali',\n    text: '',\n    avatarUrl: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=634&q=80'\n  },\n  {\n    _id: `kokooowo`,\n    name: 'Natali',\n    email: '@natali',\n    text: '',\n    avatarUrl: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=634&q=80'\n  },\n  {\n    _id: `kowskoooo`,\n    name: 'Natali',\n    email: '@natali',\n    text: '',\n    avatarUrl: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=634&q=80'\n  },\n  {\n    _id: `kokwoooo`,\n    name: 'Natali',\n    email: '@natali',\n    text: '',\n    avatarUrl: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=634&q=80'\n  },\n  {\n    _id: `kokowooo`,\n    name: 'Natali',\n    email: '@natali',\n    text: '',\n    avatarUrl: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=634&q=80'\n  },\n];\n\n\n\nconst Home = () => {\n  const classes = useStyles();\n  return (\n    <Container maxWidth=\"lg\">      \n      <Grid container spacing={3}>        \n        <Grid  item xs={2} sm={2}>\n          <SideMenu classes={classes}/>                \n        </Grid>\n        <Grid item xs={5} sm={6}>\n          <Paper className={classes.tweetsWrapper} variant=\"outlined\">\n            <Paper className={classes.tweetsHeader} variant=\"outlined\">\n              <Typography variant=\"h6\">\n                Главная                \n              </Typography>\n              <AddTweet classes={classes}/>\n            </Paper>            \n            <ul className={classes.tweetsList}>\n              {users.map((user)=>\n                <Tweet key={user._id} classes={classes} text={text} user={user}/>\n              )}         \n              \n                      \n            </ul>\n            \n          </Paper>\n        </Grid>\n        \n        <Grid item xs={5} sm={4}>        \n          <div className={classes.searchFieldWrap}>\n            <IconButton>\n              <SearchIcon />\n            </IconButton>\n            <InputBase className={classes.searchField}              \n              variant=\"outlined\"           \n              fullWidth\n              placeholder=\"Поиск по твиттеру\"\n            />            \n          </div>\n          <div>\n            <SideHomeRight/>\n          </div>          \n        </Grid>\n        \n      </Grid>\n    </Container>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport './App.css';\nimport SignIn from './signin';\nimport Home from './home';\nimport {Switch, Route} from 'react-router-dom';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path=\"/signin\" component={SignIn} />\n        <Route path=\"/\" component = {Home} />              \n      </Switch>      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nexport const theme = createMuiTheme({\n  spacing: 5,\n  palette: {\n    primary: {\n      main: `#1DA1F2`,\n    },\n    secondary: {\n      main: `#039be5`,\n    },\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport {theme} from './theme.js';\nimport {BrowserRouter as Router} from 'react-router-dom';\n\nReactDOM.render(\n  <React.Fragment>\n    <ThemeProvider theme={theme}>\n      <Router>\n        <App />\n      </Router>      \n    </ThemeProvider>\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}