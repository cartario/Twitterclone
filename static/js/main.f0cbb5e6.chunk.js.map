{"version":3,"sources":["signin-modal.jsx","signup-modal.jsx","signin.jsx","home.jsx","App.js","serviceWorker.js","theme.js","index.js"],"names":["classes","title","React","useState","open","setOpen","handleClose","Button","className","button","fullWidth","color","variant","onClick","Dialog","onClose","aria-labelledby","Box","textAlign","DialogTitle","id","DialogContent","FormControl","FormGroup","TextField","autoFocus","label","type","DialogActions","signUpButton","useStyles","makeStyles","theme","wrapper","display","height","border","blueSide","position","flex","justifyContent","alignItems","backgroundColor","overflow","blueSideList","margin","padding","listStyle","blueSideListIcon","marginRight","blueSideBigIcon","top","left","width","transform","loginSide","loginSideWrapper","maxWidth","boxSizing","borderRadius","marginBottom","spacing","props","Typography","style","paper","sideMenuList","sideMenuItem","sideMenuItemLabel","fontSize","marginLeft","sideMenuIcon","logo","BootstrapInput","withStyles","input","InputBase","Home","Container","Grid","container","item","xs","Paper","IconButton","placeholder","App","path","component","SignIn","Boolean","window","location","hostname","match","createMuiTheme","palette","primary","main","secondary","ReactDOM","render","Fragment","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f0cbb5e6.chunk.js","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { FormControl } from '@material-ui/core';\nimport { FormGroup } from '@material-ui/core';\nimport { Box } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\n\n\nexport default ({classes, title}) => {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  return ( <>\n      <Button className={classes.button} fullWidth  color=\"primary\" variant=\"outlined\" onClick={handleClickOpen}>{title}</Button> \n      <Dialog  open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">        \n        <Box textAlign=\"right\">\n          <CloseIcon color=\"primary\" onClick={handleClose}/>\n        </Box>\n        <DialogTitle id=\"form-dialog-title\">{title}</DialogTitle>\n        <DialogContent>          \n          <FormControl>\n            <FormGroup>\n              <TextField\n                autoFocus                \n                id=\"email\"\n                label=\"Почта\"\n                type=\"email\"\n                fullWidth\n              />\n              <TextField\n                autoFocus                \n                id=\"password\"\n                label=\"Пароль\"\n                type=\"password\"\n                fullWidth\n              />\n            </FormGroup>                \n          </FormControl>          \n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Назад\n          </Button>\n          <Button onClick={handleClose} color=\"primary\">\n            Войти\n          </Button>\n        </DialogActions>\n      </Dialog>      \n    </>\n  );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { FormControl } from '@material-ui/core';\nimport { FormGroup } from '@material-ui/core';\nimport { Box } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\n\n\nexport default ({classes, title}) => {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  return ( <>\n      <Button className={classes.button} fullWidth  color=\"primary\" variant=\"contained\" onClick={handleClickOpen}>{title}</Button> \n      <Dialog  open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">        \n        <Box textAlign=\"right\">\n          <CloseIcon color=\"primary\" onClick={handleClose}/>\n        </Box>\n        <DialogTitle id=\"form-dialog-title\">Создайте учетную запись</DialogTitle>\n        <DialogContent>          \n          <FormControl>\n            <FormGroup>\n              <TextField\n                autoFocus                \n                id=\"name\"\n                label=\"Имя\"\n                type=\"name\"\n                fullWidth\n              />\n              <TextField\n                autoFocus                \n                id=\"email\"\n                label=\"Почта\"\n                type=\"email\"\n                fullWidth\n              />\n              <TextField\n                autoFocus                \n                id=\"password\"\n                label=\"Пароль\"\n                type=\"password\"\n                fullWidth\n              />\n            </FormGroup>                \n          </FormControl>          \n        </DialogContent>\n        <DialogActions>          \n          <Button className={classes.signUpButton} fullWidth onClick={handleClose} color=\"primary\" variant=\"contained\">\n            Далее\n          </Button>\n        </DialogActions>\n      </Dialog>      \n    </>\n  );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport {makeStyles, Typography} from '@material-ui/core';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport SearchOutlinedIcon from '@material-ui/icons/SearchOutlined';\nimport PeopleAltOutlinedIcon from '@material-ui/icons/PeopleAltOutlined';\nimport ChatBubbleOutlineOutlinedIcon from '@material-ui/icons/ChatBubbleOutlineOutlined';\nimport SignInModal from './signin-modal';\nimport SignUpModal from './signup-modal';\n\nconst useStyles = makeStyles((theme)=>({\n  wrapper: {    \n    display: `flex`,\n    height: `100vh`,\n    border: `1px solid grey`,\n  },\n  blueSide: {\n    position: `relative`,\n    flex: `0 0 50%`,\n    display: `flex`,\n    justifyContent: `center`,\n    alignItems: `center`,\n    backgroundColor: `#1DA1F2`,\n    overflow: `hidden`,\n  },\n  blueSideList: {\n    position: `relative`,\n    margin: 0,\n    padding: 0,\n    listStyle: `none`,\n    '& h6': {\n      color: `white`,\n      display: `flex`,\n      justifyContent: `center`,\n      alignItems: `center`,\n    },\n  },\n  blueSideListIcon: {    \n    marginRight: 10,\n  },\n  blueSideBigIcon: {\n    position: `absolute`,\n    top: `35%`,\n    left: `45%`,\n    width: `250%`,\n    height: `250%`,\n    transform: `translate(-50%, -50%)`,\n  },\n  loginSide: {\n    display: `flex`,\n    justifyContent: `center`,\n    alignItems: `center`,\n    flex: `0 0 50%`,\n    backgroundColor: `white`,    \n  }, \n  loginSideWrapper: {\n    maxWidth: `80%`,    \n  }, \n  button: {    \n    margin: `5px auto`,\n    boxSizing: `border-box`,\n    borderRadius: `25px`, \n  },\n  signUpButton: {\n    marginBottom: theme.spacing(4),\n  },\n}));\n\nexport default (props)=> {\n  const classes = useStyles();\n\n  \n\n  return (\n    <div className={classes.wrapper}>\n      <section className={classes.blueSide}>\n        <TwitterIcon className={classes.blueSideBigIcon} color=\"secondary\"/>  \n        <ul className={classes.blueSideList}>\n          <li>\n            <Typography variant=\"h6\">\n              <SearchOutlinedIcon className={classes.blueSideListIcon}/>\n              point1\n            </Typography>\n          </li>\n          <li>\n            <Typography variant=\"h6\">\n              <PeopleAltOutlinedIcon className={classes.blueSideListIcon}/>\n              point2\n            </Typography>\n          </li>\n          <li>\n            <Typography variant=\"h6\">\n            <ChatBubbleOutlineOutlinedIcon className={classes.blueSideListIcon}/>\n            point3</Typography>\n          </li>\n        </ul>\n      </section>\n      <section className={classes.loginSide}>\n        <div className={classes.loginSideWrapper} style={{textAlign: `left`}}>          \n          <TwitterIcon color=\"primary\"/>          \n          <Typography variant=\"h3\">Title</Typography>\n          <Typography variant=\"h4\">SmallSmaller titleSmaller titleer title</Typography>          \n          <SignUpModal title={`Зарегистрироваться`} classes={classes}/>      \n          <SignInModal title={`Войти`} classes={classes}/>\n        </div>\n      </section>      \n    </div>\n  );\n};\n","import React from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { Container, createStyles } from '@material-ui/core';\nimport { Typography } from '@material-ui/core';\nimport { IconButton } from '@material-ui/core';\nimport { TextField } from '@material-ui/core';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport InputBase from '@material-ui/core/InputBase';\nimport NotificationsIcon from '@material-ui/icons/NotificationsNoneOutlined';\nimport MessageIcon from '@material-ui/icons/EmailOutlined';\nimport BookmarkIcon from '@material-ui/icons/BookmarkBorderOutlined';\nimport RepeatIcon from '@material-ui/icons/RepeatOutlined';\nimport UserIcon from '@material-ui/icons/PersonOutlineOutlined';\nimport SearchIcon from '@material-ui/icons/SearchOutlined';\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    textAlign: `left`,\n  },\n  sideMenuList: {\n    margin: 0,\n    padding: 0,\n    listStyle: `none`,\n  },\n  sideMenuItem: {\n    display: `flex`,\n    alignItems: `center`,\n  },\n  sideMenuItemLabel: {\n    fontSize: 16,\n    marginLeft: 10,\n  },\n  sideMenuIcon: {\n    fontSize: 30,\n  },\n  logo: {\n    fontSize: 32,\n  },\n}));\n\nconst BootstrapInput = withStyles((theme) => ({\n  \n  input: {\n    borderRadius: 40,\n    position: 'relative',\n    backgroundColor: `#ced4da`,\n    border: '1px solid #ced4da',\n    fontSize: 16,    \n    padding: '10px 12px',    \n  },\n}))(InputBase);\n\nconst Home = () => {\n  const classes = useStyles();\n  return (\n    <Container maxWidth=\"lg\">\n      <Grid container spacing={3}>        \n        <Grid  item xs={3}>\n          <Paper style={{height: `100vh`}} className={classes.paper}>            \n            <ul className={classes.sideMenuList}>\n              <li className={classes.sideMenuItem}>\n                <IconButton>\n                  <TwitterIcon className={classes.logo} color=\"primary\"/>\n                </IconButton>                \n              </li>\n              <li className={classes.sideMenuItem}>\n                <IconButton>\n                  <NotificationsIcon className={classes.sideMenuIcon} />\n                </IconButton>   \n                <Typography className={classes.sideMenuItemLabel} >Notifications</Typography>\n              </li>\n              <li className={classes.sideMenuItem}>\n                <IconButton>\n                  <MessageIcon className={classes.sideMenuIcon} />\n                </IconButton>   \n                <Typography className={classes.sideMenuItemLabel} >Messages</Typography>\n              </li>\n              <li className={classes.sideMenuItem}>\n                <IconButton>\n                  <BookmarkIcon className={classes.sideMenuIcon} />\n                </IconButton>   \n                <Typography className={classes.sideMenuItemLabel} >BookMarks</Typography>\n              </li>\n              <li className={classes.sideMenuItem}>\n                <IconButton>\n                  <RepeatIcon className={classes.sideMenuIcon} />\n                </IconButton>   \n                <Typography className={classes.sideMenuItemLabel} >Repeats</Typography>\n              </li>\n              <li className={classes.sideMenuItem}>\n                <IconButton>\n                  <UserIcon className={classes.sideMenuIcon} />\n                </IconButton>   \n                <Typography className={classes.sideMenuItemLabel} >User</Typography>\n              </li>\n              <li className={classes.sideMenuItem}>\n                <IconButton>\n                  <SearchIcon className={classes.sideMenuIcon} />\n                </IconButton>   \n                <Typography className={classes.sideMenuItemLabel} >Search</Typography>\n              </li>\n            </ul>          \n          </Paper>       \n        </Grid>\n        <Grid item xs={6}>\n          <Paper style={{height: `100%`}} className={classes.paper}>xs</Paper>\n        </Grid>\n        <Grid item xs={3}>\n          {/* <Paper className={classes.paper}> */}\n            <BootstrapInput              \n              label=\"Поиск\"              \n              fullWidth\n              placeholder=\"Поиск по твиттеру\"\n              \n            />\n          {/* </Paper> */}\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport './App.css';\nimport SignIn from './signin';\nimport Home from './home';\nimport {Switch, Route} from 'react-router-dom';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path=\"/signin\" component={SignIn} />\n        <Route path=\"/\" component = {Home} />              \n      </Switch>      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport purple from '@material-ui/core/colors/purple';\nimport green from '@material-ui/core/colors/green';\n\nexport const theme = createMuiTheme({\n  spacing: 5,\n  palette: {\n    primary: {\n      main: `#1DA1F2`,\n    },\n    secondary: {\n      main: `#039be5`,\n    },\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport {theme} from './theme.js';\nimport {BrowserRouter as Router} from 'react-router-dom';\n\nReactDOM.render(\n  <React.Fragment>\n    <ThemeProvider theme={theme}>\n      <Router>\n        <App />\n      </Router>      \n    </ThemeProvider>\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}