{"version":3,"sources":["signin-modal.jsx","signup-modal.jsx","signin.jsx","store/ducks/tweets/actions.js","add-tweet.jsx","modal-block.jsx","side-menu.jsx","tweet.jsx","side-home-right.jsx","home.jsx","store/ducks/tweets/reducer-tweets.js","store/root-reducer.js","store/ducks/tweets/selectors.js","store/ducks/tweets/operations.js","App.js","serviceWorker.js","theme.js","store/store.js","index.js"],"names":["classes","title","React","useState","open","setOpen","handleClose","Button","className","button","fullWidth","color","variant","onClick","Dialog","onClose","aria-labelledby","Box","textAlign","DialogTitle","id","DialogContent","FormControl","FormGroup","TextField","autoFocus","label","type","DialogActions","signUpButton","useStyles","makeStyles","theme","wrapper","display","height","border","blueSide","position","flex","justifyContent","alignItems","backgroundColor","overflow","blueSideList","margin","padding","listStyle","blueSideListIcon","marginRight","blueSideBigIcon","top","left","width","transform","loginSide","loginSideWrapper","maxWidth","boxSizing","borderRadius","marginBottom","spacing","props","Typography","style","ActionTypes","ActionCreator","payload","AddTweet","maxRows","text","setText","textLength","length","progressBar","isValid","Grid","container","item","xs","Avatar","alt","src","TextareaAutosize","addTweetTextarea","placeholder","onChange","e","target","value","rowsMax","addTweetControls","addTweetControlsLeftSide","addTweetControlsRightSide","undefined","addTweetControlsCircularProgress","CircularProgress","size","disabled","addTweetButton","withStyles","root","closeButton","right","palette","grey","children","other","disableTypography","IconButton","aria-label","MuiDialogContent","CustomizedDialogs","modalTitle","isVisible","SideMenu","isVisibleAddTweet","setVisibleAddTweet","Paper","paper","sideMenuList","sideMenuItem","marginTop","paddingTop","logo","sideMenuIcon","Hidden","smDown","sideMenuItemLabel","sideMenuButton","mdUp","Tweet","user","tweetsItem","tweetAvatar","fullName","avatarUrl","tweetsUser","tweetsUserName","userName","tweetControls","tweetIconButton","tweetIcon","fontSize","rightSideList","rightSideListTitle","rightSideItemAvatar","themeNews","tweetsCount","SideHomeRight","List","ListItem","vatiant","Divider","component","ListItemText","primary","secondary","cursor","transition","main","fill","marginLeft","searchFieldWrap","zIndex","searchField","tweetsWrapper","borderTop","borderBottom","tweetsHeader","borderRight","borderLeft","tweetsList","fontFamily","outline","resize","Home","sayHello","tweets","useDispatch","Container","sm","map","tweet","key","_id","InputBase","loadingStatus","initialState","hello","items","Pages","rootReducer","combineReducers","state","action","Selector","Operation","dispatch","axios","get","then","res","data","catch","err","App","useSelector","useEffect","path","SignIn","Boolean","window","location","hostname","match","createMuiTheme","store","createStore","compose","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","Fragment","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.a1a3d3fc.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { FormControl } from '@material-ui/core';\r\nimport { FormGroup } from '@material-ui/core';\r\nimport { Box } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\nexport default ({classes, title}) => {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  return ( <>\r\n      <Button className={classes.button} fullWidth  color=\"primary\" variant=\"outlined\" onClick={handleClickOpen}>{title}</Button> \r\n      <Dialog  open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">        \r\n        <Box textAlign=\"right\">\r\n          <CloseIcon color=\"primary\" onClick={handleClose}/>\r\n        </Box>\r\n        <DialogTitle id=\"form-dialog-title\">{title}</DialogTitle>\r\n        <DialogContent>          \r\n          <FormControl>\r\n            <FormGroup>\r\n              <TextField\r\n                autoFocus                \r\n                id=\"email\"\r\n                label=\"Почта\"\r\n                type=\"email\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                autoFocus                \r\n                id=\"password\"\r\n                label=\"Пароль\"\r\n                type=\"password\"\r\n                fullWidth\r\n              />\r\n            </FormGroup>                \r\n          </FormControl>          \r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Назад\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Войти\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>      \r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { FormControl } from '@material-ui/core';\r\nimport { FormGroup } from '@material-ui/core';\r\nimport { Box } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\nexport default ({classes, title}) => {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  return ( <>\r\n      <Button className={classes.button} fullWidth  color=\"primary\" variant=\"contained\" onClick={handleClickOpen}>{title}</Button> \r\n      <Dialog  open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">        \r\n        <Box textAlign=\"right\">\r\n          <CloseIcon color=\"primary\" onClick={handleClose}/>\r\n        </Box>\r\n        <DialogTitle id=\"form-dialog-title\">Создайте учетную запись</DialogTitle>\r\n        <DialogContent>          \r\n          <FormControl>\r\n            <FormGroup>\r\n              <TextField\r\n                autoFocus                \r\n                id=\"name\"\r\n                label=\"Имя\"\r\n                type=\"name\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                autoFocus                \r\n                id=\"email\"\r\n                label=\"Почта\"\r\n                type=\"email\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                autoFocus                \r\n                id=\"password\"\r\n                label=\"Пароль\"\r\n                type=\"password\"\r\n                fullWidth\r\n              />\r\n            </FormGroup>                \r\n          </FormControl>          \r\n        </DialogContent>\r\n        <DialogActions>          \r\n          <Button className={classes.signUpButton} fullWidth onClick={handleClose} color=\"primary\" variant=\"contained\">\r\n            Далее\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>      \r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {makeStyles, Typography} from '@material-ui/core';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport SearchOutlinedIcon from '@material-ui/icons/SearchOutlined';\r\nimport PeopleAltOutlinedIcon from '@material-ui/icons/PeopleAltOutlined';\r\nimport ChatBubbleOutlineOutlinedIcon from '@material-ui/icons/ChatBubbleOutlineOutlined';\r\nimport SignInModal from './signin-modal';\r\nimport SignUpModal from './signup-modal';\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n  wrapper: {    \r\n    display: `flex`,\r\n    height: `100vh`,\r\n    border: `1px solid grey`,\r\n  },\r\n  blueSide: {\r\n    position: `relative`,\r\n    flex: `0 0 50%`,\r\n    display: `flex`,\r\n    justifyContent: `center`,\r\n    alignItems: `center`,\r\n    backgroundColor: `#1DA1F2`,\r\n    overflow: `hidden`,\r\n  },\r\n  blueSideList: {\r\n    position: `relative`,\r\n    margin: 0,\r\n    padding: 0,\r\n    listStyle: `none`,\r\n    '& h6': {\r\n      color: `white`,\r\n      display: `flex`,\r\n      justifyContent: `center`,\r\n      alignItems: `center`,\r\n    },\r\n  },\r\n  blueSideListIcon: {    \r\n    marginRight: 10,\r\n  },\r\n  blueSideBigIcon: {\r\n    position: `absolute`,\r\n    top: `35%`,\r\n    left: `45%`,\r\n    width: `250%`,\r\n    height: `250%`,\r\n    transform: `translate(-50%, -50%)`,\r\n  },\r\n  loginSide: {\r\n    display: `flex`,\r\n    justifyContent: `center`,\r\n    alignItems: `center`,\r\n    flex: `0 0 50%`,\r\n    backgroundColor: `white`,    \r\n  }, \r\n  loginSideWrapper: {\r\n    maxWidth: `80%`,    \r\n  }, \r\n  button: {    \r\n    margin: `5px auto`,\r\n    boxSizing: `border-box`,\r\n    borderRadius: `25px`, \r\n  },\r\n  signUpButton: {\r\n    marginBottom: theme.spacing(4),\r\n  },\r\n}));\r\n\r\nexport default (props)=> {\r\n  const classes = useStyles();\r\n\r\n  \r\n\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      <section className={classes.blueSide}>\r\n        <TwitterIcon className={classes.blueSideBigIcon} color=\"secondary\"/>  \r\n        <ul className={classes.blueSideList}>\r\n          <li>\r\n            <Typography variant=\"h6\">\r\n              <SearchOutlinedIcon className={classes.blueSideListIcon}/>\r\n              point1\r\n            </Typography>\r\n          </li>\r\n          <li>\r\n            <Typography variant=\"h6\">\r\n              <PeopleAltOutlinedIcon className={classes.blueSideListIcon}/>\r\n              point2\r\n            </Typography>\r\n          </li>\r\n          <li>\r\n            <Typography variant=\"h6\">\r\n            <ChatBubbleOutlineOutlinedIcon className={classes.blueSideListIcon}/>\r\n            point3</Typography>\r\n          </li>\r\n        </ul>\r\n      </section>\r\n      <section className={classes.loginSide}>\r\n        <div className={classes.loginSideWrapper} style={{textAlign: `left`}}>          \r\n          <TwitterIcon color=\"primary\"/>          \r\n          <Typography variant=\"h3\">Title</Typography>\r\n          <Typography variant=\"h4\">SmallSmaller titleSmaller titleer title</Typography>          \r\n          <SignUpModal title={`Зарегистрироваться`} classes={classes}/>      \r\n          <SignInModal title={`Войти`} classes={classes}/>\r\n        </div>\r\n      </section>      \r\n    </div>\r\n  );\r\n};\r\n","export const ActionTypes = {\r\n  HELLO: `HELLO`,\r\n  SET_TWEETS: `tweets/SET_TWEETS`,\r\n  SET_LOADING: `tweets/SET_LOADING`,\r\n};\r\n\r\nexport const ActionCreator = {\r\n  hello: ()=> ({\r\n    type: ActionTypes.HELLO\r\n  }),\r\n\r\n  setTweets: (payload) => ({\r\n    type: ActionTypes.SET_TWEETS,\r\n    payload: payload,\r\n  }),\r\n  \r\n  setLoading: () => ({\r\n    type: ActionTypes.SET_LOADING,    \r\n  })\r\n};\r\n","import React, {useState} from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { TextareaAutosize, Button, CircularProgress  } from '@material-ui/core';\r\nimport FileIcon from '@material-ui/icons/BrokenImageOutlined';\r\nimport SmileIcon from '@material-ui/icons/SentimentSatisfiedOutlined';\r\n\r\nconst TEXT_MAX_LENGTH = 10;\r\n\r\nconst AddTweet = ({classes, maxRows}) => {\r\n  const [text, setText] = useState(``);\r\n\r\n  const textLength = text.length;\r\n  const progressBar = (1- (TEXT_MAX_LENGTH - textLength) / TEXT_MAX_LENGTH) * 100;  \r\n  const isValid = TEXT_MAX_LENGTH - textLength < 0 ? false : true;\r\n\r\n  const handleChange = (e) => {    \r\n    setText(e.target.value);      \r\n  };\r\n\r\n  const handleClickAddTweet = () => {\r\n    setText(text);    \r\n  };\r\n\r\n  return (    \r\n    <Grid container > \r\n      <Grid item xs={1}>\r\n        <Avatar alt=\"avatar\" src=\"https://images.unsplash.com/photo-1527980965255-d3b416303d12?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1400&q=80\"/>\r\n      </Grid>\r\n      <Grid item xs={11}>\r\n        <TextareaAutosize className={classes.addTweetTextarea} placeholder=\"Что происходит?\"  onChange={handleChange} rowsMax={maxRows}/>\r\n        <div className={classes.addTweetControls}>\r\n          <div className={classes.addTweetControlsLeftSide}>\r\n            <FileIcon color=\"primary\"/>\r\n            <SmileIcon color=\"primary\"/>  \r\n          </div>\r\n          <div className={classes.addTweetControlsRightSide}>\r\n            <span style={isValid ? undefined: {color: `red`}}>{TEXT_MAX_LENGTH - textLength}</span>\r\n            <div className={classes.addTweetControlsCircularProgress}>\r\n              <CircularProgress variant=\"static\" value={isValid ? progressBar : 100} size={20}\r\n              style={isValid ? undefined: {color: `red`}}\r\n              />\r\n              <CircularProgress style={{color: `rgba(0,0,0,0.3)`, position: `absolute`, left: 0}} variant=\"static\" value={100} size={20}/>\r\n            </div>            \r\n            <Button \r\n              disabled={!isValid || !text}\r\n              className={classes.addTweetButton} variant=\"contained\" color=\"primary\"\r\n              onClick={handleClickAddTweet}\r\n            >Твитнуть</Button>\r\n          </div>\r\n        </div>\r\n      </Grid>\r\n    </Grid>    \r\n  );\r\n};\r\n\r\nexport default AddTweet;\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n    \r\n  },\r\n}))(MuiDialogContent);\r\n\r\n\r\n\r\nexport default function CustomizedDialogs({modalTitle, children, isVisible, handleClose}) {\r\n  return (         \r\n      <Dialog onClose={handleClose} open={isVisible} >        \r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n          {modalTitle}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          {children}\r\n        </DialogContent>            \r\n      </Dialog>         \r\n  );\r\n}\r\n","import React, {useState} from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Button} from '@material-ui/core';\r\nimport { Hidden} from '@material-ui/core';\r\nimport { Typography} from '@material-ui/core';\r\nimport { IconButton } from '@material-ui/core';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport NotificationsIcon from '@material-ui/icons/NotificationsNoneOutlined';\r\nimport MessageIcon from '@material-ui/icons/EmailOutlined';\r\nimport BookmarkIcon from '@material-ui/icons/BookmarkBorderOutlined';\r\nimport RepeatIcon from '@material-ui/icons/RepeatOutlined';\r\nimport UserIcon from '@material-ui/icons/PersonOutlineOutlined';\r\nimport SearchIcon from '@material-ui/icons/SearchOutlined';\r\nimport CreateIcon from '@material-ui/icons/CreateOutlined';\r\nimport AddTweet from './add-tweet';\r\nimport ModalBlock from './modal-block';\r\n\r\nconst SideMenu = ({classes}) => {\r\n  const [isVisibleAddTweet, setVisibleAddTweet] = useState(false);\r\n\r\n  const handleCloseModal = () => {\r\n    setVisibleAddTweet(false);\r\n  };\r\n\r\n  const handleClickOpenModal = () => {\r\n    setVisibleAddTweet(true);\r\n  };\r\n\r\n  return (\r\n    <Paper style={{height: `100%`}} className={classes.paper}>            \r\n      <ul className={classes.sideMenuList}>\r\n        <li className={classes.sideMenuItem} style={{marginTop: 0}}>\r\n          <IconButton style={{paddingTop: 0}}>\r\n            <TwitterIcon className={classes.logo} color=\"primary\"/>\r\n          </IconButton>                \r\n        </li>\r\n        <li className={classes.sideMenuItem}>\r\n          <IconButton>\r\n            <NotificationsIcon className={classes.sideMenuIcon} />\r\n          </IconButton>\r\n          <Hidden smDown>\r\n            <Typography className={classes.sideMenuItemLabel} >Notifications</Typography>\r\n          </Hidden>  \r\n          \r\n        </li>\r\n        <li className={classes.sideMenuItem}>\r\n          <IconButton>\r\n            <MessageIcon className={classes.sideMenuIcon} />\r\n          </IconButton>\r\n          <Hidden smDown>\r\n            <Typography className={classes.sideMenuItemLabel} >Messages</Typography>\r\n          </Hidden>\r\n          \r\n        </li>\r\n        <li className={classes.sideMenuItem}>\r\n          <IconButton>\r\n            <BookmarkIcon className={classes.sideMenuIcon} />\r\n          </IconButton>\r\n          <Hidden smDown>\r\n            <Typography className={classes.sideMenuItemLabel} >BookMarks</Typography>\r\n          </Hidden>\r\n\r\n        </li>\r\n        <li className={classes.sideMenuItem}>\r\n          <IconButton>\r\n            <RepeatIcon className={classes.sideMenuIcon} />\r\n          </IconButton> \r\n          <Hidden smDown>  \r\n            <Typography className={classes.sideMenuItemLabel} >Repeats</Typography>\r\n          </Hidden>\r\n        </li>\r\n        <li className={classes.sideMenuItem}>\r\n          <IconButton>\r\n            <UserIcon className={classes.sideMenuIcon} />\r\n          </IconButton> \r\n          <Hidden smDown> \r\n            <Typography className={classes.sideMenuItemLabel} >User</Typography>\r\n          </Hidden> \r\n        </li>\r\n        <li className={classes.sideMenuItem}>\r\n          <IconButton>\r\n            <SearchIcon className={classes.sideMenuIcon} />\r\n          </IconButton> \r\n          <Hidden smDown>  \r\n            <Typography className={classes.sideMenuItemLabel} >Search</Typography>\r\n          </Hidden>\r\n        </li>\r\n        <li className={classes.sideMenuItem}>          \r\n          <Button className={classes.sideMenuButton} onClick={handleClickOpenModal} variant=\"contained\" color=\"primary\" fullWidth>\r\n            <Hidden smDown>Твитнуть</Hidden> \r\n            <Hidden mdUp>          \r\n              <CreateIcon className={classes.sideMenuIcon}/>            \r\n            </Hidden> \r\n          </Button>            \r\n        </li>\r\n        <ModalBlock \r\n          isVisible={isVisibleAddTweet}\r\n          handleClose={handleCloseModal}          \r\n          modalTitle={``}>          \r\n            <div style={{width: `500px`}} >\r\n              <AddTweet classes={classes} maxRows={10}/>\r\n            </div>\r\n        </ModalBlock> \r\n      </ul>\r\n      \r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default SideMenu;\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Typography } from '@material-ui/core';\r\nimport { IconButton } from '@material-ui/core';\r\nimport RepeatIcon from '@material-ui/icons/RepeatOutlined';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport CommentIcon from '@material-ui/icons/ChatBubbleOutlineOutlined';\r\nimport LikeIcon from '@material-ui/icons/FavoriteBorderOutlined';\r\nimport SendIcon from '@material-ui/icons/SendOutlined';\r\n\r\nconst Tweet = ({classes, text, user}) => {\r\n  return (\r\n    <li className={classes.tweetsItem}>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={1}>\r\n          <Avatar className={classes.tweetAvatar} alt={`Аватарка пользователя ${user.fullName}`} src={user.avatarUrl} />\r\n        </Grid>\r\n        <Grid item xs={11}>\r\n          <Typography className={classes.tweetsUser}>\r\n          <b>{user.fullName}</b>\r\n          <span className={classes.tweetsUserName}>{user.userName}</span>\r\n          <span className={classes.tweetsUserName}>-</span>\r\n          <span className={classes.tweetsUserName}>{user.userName}</span>\r\n          </Typography>\r\n          <Typography variant=\"body1\">\r\n            {text}\r\n          </Typography>\r\n          <div className={classes.tweetControls}>\r\n            <IconButton className={classes.tweetIconButton}>\r\n              <CommentIcon className={classes.tweetIcon}/>\r\n              <span style={{fontSize: 14}}>1</span>\r\n            </IconButton>\r\n            <IconButton className={classes.tweetIconButton}>\r\n              <RepeatIcon className={classes.tweetIcon}/>                       \r\n            </IconButton>\r\n            <IconButton className={classes.tweetIconButton}>\r\n              <LikeIcon className={classes.tweetIcon}/>                        \r\n            </IconButton >\r\n            <IconButton className={classes.tweetIconButton}>\r\n              <SendIcon className={classes.tweetIcon}/>                        \r\n            </IconButton>                      \r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Tweet;\r\n","import React from 'react';\r\nimport {makeStyles, List, ListItem, ListItemText, Divider, Typography, Avatar, IconButton} from '@material-ui/core';\r\nimport AddUserIcon from '@material-ui/icons/PersonAddOutlined';\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n  rightSideList: {\r\n    marginTop: 10,\r\n    borderRadius: `10px`,\r\n    backgroundColor: `#ced4da`,\r\n  },\r\n  rightSideListTitle: {\r\n    \r\n  },\r\n  rightSideItemAvatar: {\r\n    marginRight: 20,\r\n  },\r\n}));\r\n\r\nconst themeNews = ['Санкт-Петербург','#коронавирус','Беларусь'];\r\nconst tweetsCount = [3331, 234, 5767];\r\nconst user = {\r\n  name: [`alex`,`naasha`,`dimon`],\r\n  mail: [`@alwx`,`@naasha`,`@dimon`],\r\n};\r\n\r\nconst SideHomeRight = () => {\r\n  const classes = useStyles();\r\n  return (<>\r\n    <List className={classes.rightSideList}>\r\n      <ListItem>\r\n        <Typography className={classes.rightSideListTitle} vatiant=\"h2\"><b>Актуальные темы</b></Typography>\r\n      </ListItem>\r\n      <Divider component=\"li\"/>\r\n      <ListItem button>        \r\n        <ListItemText primary={themeNews[0]} secondary={`Твитов: ${tweetsCount[0]}`}/>\r\n      </ListItem>\r\n      <Divider component=\"li\"/>\r\n      <ListItem button> \r\n        <ListItemText primary={themeNews[1]} secondary={`Твитов: ${tweetsCount[1]}`}/>\r\n      </ListItem>\r\n      <Divider component=\"li\"/>\r\n      <ListItem button>\r\n        <ListItemText primary={themeNews[2]} secondary={`Твитов: ${tweetsCount[2]}`}/>\r\n      </ListItem>\r\n      <Divider component=\"li\"/>\r\n    </List>\r\n    <List className={classes.rightSideList}>\r\n      <ListItem>\r\n        <Typography className={classes.rightSideListTitle} vatiant=\"h2\"><b>Кого читать</b></Typography>\r\n      </ListItem>\r\n      <Divider component=\"li\"/>\r\n      <ListItem button>\r\n        <Avatar className={classes.rightSideItemAvatar} alt=\"Remy Sharp\" src=\"https://images.unsplash.com/photo-1569913486515-b74bf7751574?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=935&q=80\"/>\r\n        <ListItemText primary={user.name[0]} secondary={user.mail[0]}/>\r\n        <IconButton>\r\n          <AddUserIcon color=\"primary\"/>\r\n        </IconButton>\r\n      </ListItem>\r\n      <Divider component=\"li\"/>\r\n      <ListItem button> \r\n        <Avatar className={classes.rightSideItemAvatar} alt=\"Remy Sharp\" src=\"https://images.unsplash.com/photo-1599566150163-29194dcaad36?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2734&q=80\"/>\r\n        <ListItemText primary={user.name[1]} secondary={user.mail[1]}/>\r\n        <IconButton>\r\n          <AddUserIcon color=\"primary\"/>\r\n        </IconButton>\r\n      </ListItem>\r\n      <Divider component=\"li\"/>\r\n      <ListItem button>\r\n        <Avatar className={classes.rightSideItemAvatar} alt=\"Remy Sharp\" src=\"https://images.unsplash.com/photo-1543610892-0b1f7e6d8ac1?ixlib=rb-1.2.1&auto=format&fit=crop&w=1856&q=80\"/>\r\n        <ListItemText primary={user.name[2]} secondary={user.mail[2]}/>\r\n        <IconButton>\r\n          <AddUserIcon color=\"primary\"/>\r\n        </IconButton>        \r\n      </ListItem>\r\n      <Divider component=\"li\"/>\r\n    </List>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SideHomeRight;\r\n","import React from 'react';\r\nimport {ActionCreator} from './store/ducks/tweets/actions';\r\nimport SideMenu from './side-menu';\r\nimport AddTweet from './add-tweet';\r\nimport Tweet from './tweet';\r\nimport { makeStyles,} from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Container} from '@material-ui/core';\r\nimport { Typography, IconButton} from '@material-ui/core';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport grey from '@material-ui/core/colors/grey';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport SideHomeRight from './side-home-right';\r\nimport {useDispatch} from 'react-redux';\r\nimport Preloader from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {    \r\n    textAlign: `left`,\r\n  },\r\n  sideMenuList: {\r\n    position: `sticky`,\r\n    top: 0,\r\n    margin: 0,\r\n    padding: 0,\r\n    listStyle: `none`,\r\n  },\r\n  sideMenuItem: {\r\n    display: `flex`,\r\n    alignItems: `center`,\r\n    margin: `10px 0`,\r\n    cursor: `pointer`,\r\n    transition: `all 0.2s ease`,\r\n\r\n    '&:hover': {\r\n      color: theme.palette.primary.main,\r\n      backgroundColor: `rgba(29, 161, 242, 0.1)`,\r\n      borderRadius: 30,\r\n    },\r\n\r\n    '&:hover svg path': {\r\n      fill: theme.palette.primary.main,\r\n    }\r\n  },\r\n  sideMenuItemLabel: {\r\n    fontSize: 16,\r\n    marginLeft: 10,\r\n  },\r\n  sideMenuIcon: {\r\n    fontSize: 30,\r\n  },\r\n  sideMenuButton: {\r\n    margin: `5px auto`,\r\n    boxSizing: `border-box`,\r\n    borderRadius: `25px`,\r\n    color: `white`\r\n  },\r\n  logo: {    \r\n    fontSize: 32,\r\n  },\r\n  searchFieldWrap: {\r\n    display: `flex`,\r\n    position: `sticky`,\r\n    top: 0,\r\n    zIndex: 1,  \r\n    backgroundColor: `#ced4da`,\r\n    borderRadius: 40,    \r\n  },\r\n  searchField: {    \r\n    padding: `10px 15px`,       \r\n    fontSize: 16,    \r\n  },\r\n  tweetsWrapper: {\r\n    height: `100%`,\r\n    textAlign: `left`,\r\n    borderTop: 0,\r\n    borderBottom: 0,\r\n  },\r\n  tweetsHeader: {\r\n    position: `sticky`,\r\n    top: 0,\r\n    zIndex: 1,\r\n    padding: `10px`,\r\n    borderRight: 0,\r\n    borderLeft: 0,\r\n    borderTop: 0,\r\n  },\r\n  tweetsList: {\r\n    margin: 0,\r\n    padding: 0,\r\n    listStyle: `none`,\r\n    borderTop: `10px solid rgba(0,0,0,0.1)`\r\n  },\r\n  tweetsItem: {\r\n    padding: 10,\r\n    '&:hover': {\r\n      backgroundColor: `rgb(248,250,200)`\r\n    },\r\n    cursor: `pointer`,\r\n  },\r\n  tweetsUser: {\r\n    fontSize: 14\r\n  },\r\n  tweetsUserName: {\r\n    color: grey[500],\r\n  },\r\n  tweetIconButton: {\r\n    '&:hover': {\r\n      color: theme.palette.primary.main,\r\n    },\r\n  },\r\n  tweetIcon: {\r\n    fontSize: 18,         \r\n  },\r\n  tweetControls: {\r\n    display: `flex`,\r\n    justifyContent: `space-between`,\r\n    width: `80%`,\r\n    marginLeft: -13,\r\n  },\r\n  tweetAvatar: {\r\n    width: 40,\r\n    height: 40,\r\n  },\r\n  addTweetTextarea: {\r\n    width: `100%`,\r\n    fontFamily: `inherit`,\r\n    fontSize: 16,\r\n    border: 0,\r\n    outline: 'none',\r\n    resize: `none`,\r\n  },\r\n  addTweetControls: {\r\n    display: `flex`, \r\n    justifyContent: `space-between`,\r\n    marginTop: 30,\r\n  },\r\n  addTweetControlsLeftSide: {\r\n    display: `flex`,\r\n    alignItems: `center`,\r\n  },\r\n  addTweetControlsRightSide: {\r\n    display: `flex`,\r\n    alignItems: `center`,\r\n  },\r\n  addTweetControlsCircularProgress: {\r\n    position: `relative`,\r\n    margin: `0 10px`,\r\n    display: `flex`, \r\n    alignItems: `center`,\r\n  },\r\n  addTweetButton: {\r\n    margin: `0 10px`,\r\n    borderRadius: 30,\r\n    color: `white`,\r\n  },\r\n}));\r\n\r\n\r\n\r\nconst Home = ({sayHello, tweets}) => {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();  \r\n\r\n  return (\r\n    <Container maxWidth=\"lg\">  \r\n    {/* <button onClick={sayHello}>start</button>    \r\n    <button onClick={()=>{dispatch(ActionCreator.setTweets({name: `sveta`}))}}>setTweets</button>     */}\r\n      <Grid container spacing={3}>        \r\n        <Grid  item xs={2} sm={2}>\r\n          <SideMenu classes={classes}/>                \r\n        </Grid>\r\n        <Grid item xs={5} sm={6}>\r\n          <Paper className={classes.tweetsWrapper} variant=\"outlined\">\r\n            <Paper className={classes.tweetsHeader} variant=\"outlined\">\r\n              <Typography variant=\"h6\">\r\n                Главная                \r\n              </Typography>\r\n              <AddTweet classes={classes}/>\r\n            </Paper>            \r\n            <ul className={classes.tweetsList}>\r\n              {tweets.length ? tweets.map((tweet)=>\r\n                <Tweet key={tweet._id} classes={classes} text={tweet.text} user={tweet.user}/>\r\n              ) : <Preloader />}                      \r\n            </ul>            \r\n          </Paper>\r\n        </Grid>        \r\n        <Grid item xs={5} sm={4}>        \r\n          <div className={classes.searchFieldWrap}>\r\n            <IconButton>\r\n              <SearchIcon />\r\n            </IconButton>\r\n            <InputBase className={classes.searchField}              \r\n              variant=\"outlined\"           \r\n              fullWidth\r\n              placeholder=\"Поиск по твиттеру\"\r\n            />            \r\n          </div>\r\n          <div>\r\n            <SideHomeRight/>\r\n          </div>          \r\n        </Grid>\r\n        \r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import {ActionTypes} from './actions';\r\n\r\nconst user = {\r\n  fullName: ``,\r\n  userName: ``,\r\n  avatarUrl: ``,\r\n};\r\n\r\nconst loadingStatus = {\r\n  LOADED: `LOADED`,\r\n  LOADING: `LOADING`,\r\n  ERROR: `ERROR`,\r\n  NEVER: `NEVER`,\r\n};\r\n\r\nconst initialState = {\r\n  hello: `hello`,\r\n  items: [],\r\n  loadingStatus: loadingStatus.NEVER,\r\n};\r\n\r\nexport const reducer = (state = initialState, action) => {\r\n  const {type, payload} = action;\r\n  \r\n  switch(type) {\r\n    case ActionTypes.HELLO:\r\n      return {...state, hello: `hello new`};\r\n    case ActionTypes.SET_TWEETS:\r\n      return {...state, items: payload};\r\n    case ActionTypes.SET_LOADING:\r\n      return {...state, loadingStatus: loadingStatus.LOADING};\r\n\r\n    default:\r\n      return state;\r\n  }  \r\n};\r\n\r\n","import {combineReducers} from 'redux';\r\nimport {reducer as reducerTweets} from './ducks/tweets/reducer-tweets';\r\n\r\nexport const Pages = {\r\n  TWEETS: `TWEETS`,\r\n};\r\n\r\nexport const rootReducer = combineReducers({\r\n  [Pages.TWEETS] : reducerTweets,\r\n});\r\n","import {Pages} from '../../root-reducer';\r\n\r\nexport const Selector = {  \r\n  getHello: (state) => {    \r\n    return state[Pages.TWEETS].hello\r\n  },\r\n\r\n  getTweets: (state) => state[Pages.TWEETS].items,\r\n};\r\n\r\n","import {ActionCreator} from './actions';\r\nimport axios from 'axios';\r\n\r\nexport const Operation = {\r\n  fetchTweets: () => (dispatch)=> {    \r\n    return axios.get(\"https://trycode.pw/c/BKB06.json\")\r\n    .then((res)=>{       \r\n      dispatch(ActionCreator.setTweets(res.data));      \r\n    })\r\n    .catch((err)=>{\r\n      dispatch(ActionCreator.setLoading());\r\n      throw err;\r\n    });\r\n  },\r\n};\r\n","import React from 'react';\r\nimport './App.css';\r\nimport SignIn from './signin';\r\nimport Home from './home';\r\nimport {Switch, Route} from 'react-router-dom';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {ActionCreator} from './store/ducks/tweets/actions';\r\nimport {Selector} from './store/ducks/tweets/selectors';\r\nimport {Operation} from './store/ducks/tweets/operations';\r\n\r\n\r\nfunction App() { \r\n  const dispatch = useDispatch();\r\n  const tweets = useSelector(Selector.getTweets);\r\n\r\n  React.useEffect(()=>{\r\n    dispatch(Operation.fetchTweets());\r\n  }, [dispatch]);\r\n  \r\n  return (    \r\n      <div className=\"App\">\r\n        <Switch>\r\n          <Route path=\"/signin\" component={SignIn} />\r\n          <Route path=\"/\">\r\n            <Home \r\n              tweets = {tweets}\r\n              sayHello={()=>dispatch(ActionCreator.hello())}\r\n            />\r\n          </Route>              \r\n        </Switch>      \r\n      </div>    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nexport const theme = createMuiTheme({\r\n  spacing: 5,\r\n  palette: {\r\n    primary: {\r\n      main: `#1DA1F2`,\r\n    },\r\n    secondary: {\r\n      main: `#039be5`,\r\n    },\r\n  },\r\n});\r\n","import {createStore, compose, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport {rootReducer} from './root-reducer';\r\n\r\nconst store = createStore(rootReducer,\r\n  compose(applyMiddleware(thunk),  \r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport {theme} from './theme.js';\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\nimport store from './store/store';\r\nimport {Provider} from 'react-redux';\r\n\r\nReactDOM.render(\r\n  <React.Fragment>\r\n    <ThemeProvider theme={theme}>\r\n      <Provider store={store}>\r\n        <Router>\r\n          <App />\r\n        </Router>\r\n      </Provider>      \r\n    </ThemeProvider>\r\n  </React.Fragment>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}